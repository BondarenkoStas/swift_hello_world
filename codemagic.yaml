workflows:
    ios-hello-world:
      name: ios_hello_world
      environment:
        vars:
          CM_CERTIFICATE: Encrypted(Z0FBQUFBQmZHYVJVckpZaWhIRzVKS2tmZ3ZDb2FzbjVjRUR4eTB5QXhWNlRvcGQtanh2UzFWTHJRWlNjT21fVGVTN2U2R3VrTktnSGpLaWtZMzNnRkVFUGVvVnM0cmU2Wlp0TkFRUzN0SENBMVRialNIcXpYODE2VG1XSDdXbmxpNjhnakVSUU1ydkFEVGxic3d5TjZsZTB5TEFDYnlxcklLNnl1T3lidVFoWnU0VXdUMGFUclVlbEl5T3QyWUFXMGpEdmNkeU5VM3E0NWJaV28zLU1DWWJhMWJzd3dDX2lualF3U1dTWUUtYkJyRXNvR2M2TnpzTGhDUjNFeW9HZGQtS2pIV2p1cklCQUxSY3Z6Y3o1N01QWDN5YzM1MmFHekpJMFlrS0s3dDhDbVVpVEE3NkI0S3pLRkxJTXFabk0yY19uRGVCbDdlZnVwVHNBVHZlQy1XUEVWTmxQblVGWEFrR2JMc21pODZqMng2WURxTzZSTVdRc3RKWVIyUjFRb1BtaFFUcm1zZDhqUUJFMmVfcVFyZlpZTTJlc05UandBTDNHNXh4ZUlYcl9NX1dXRTZwZ1JFNEdFVmxTY21nRUYyRGlpbUluZWV3T2VHc1lJallyME9TMVhibHFDTXpDMWFZX2tSRkJnM2QxUVBmMVotR1ZwOXBueHlocFBZcTBIZ3dWUlp4YTNCa0lGVEYwQ2lPTHk5MnNScU9PWXJNczVpRUhTWFNvSFc2WlhSSXBNRkhpUTlVakpkc0tYd0F4YzIxN1FtMzhaNWQtYU5RSFNVbHpKVDZoQzc2TDBHcnN1czM0TUVkMnhaS01HUnk5ejNGOTNRT1R4Y0s2Y3dERkRLQ1dOSkNOUjRtUHhqek5HbGNjRm9hZTRrdGE1V1RuNVAxdEU5a2QydmE3ZlhvRUFoYWxia1dnZlI2a2dRTU40NHB1aldZTk94QnZVZ2xMWFdrT0p0b2R3dVRnSl91Z2pVYWtUWEw0b09hVE1DRXBHdWhVZ0VPVUdPRE9aQklFSDJtQng0cEstakRCd194T2FQZjhwTnY2QkYzU0IwUHl2eGI5bHdyYjNxczJDcUYwOXozOTUyVWRFV1FZc2o0ejNDUklTMWhYeFpQbHRyVnJKTWdYVTlQUFZEUHZqU19LbEkyN2VoOU44X1NXcEtSQkZLeVkyR21YTlpoVnJQR3ZmdjRZdm1fVUR0SUtwWEt3V1ItcmxTenljOW1hS0hqNHB0a2MxdWR1Z2NLaWdpNVRMTlJRVUVGcmduZUlUZXc3MmVhdnRzYk9PbGNqYVlLbndQaFVmWHVrWWk5UHJqQ2VDTjdRNG5fdkFxX0JOWGVsMFpSZU1nS3J6RkY4NWZfbEhBOEktSE5zVl9DX3E2S2VlQVlsZTdiM3M5UWFMUjduVl9pMENJTFRDTmlqVXhJb0phMFkyUjRnZ0RpQnJyMWFOdjRWdU9LcDd4ZXM5V0lHdXBnU21Xb0RNekNTRFRqT2N3V2lxRHNURXBnVHNMVHVhM2REX0ZQaDRodktEQ0VwdDU2am1VZWgtd3pfcjJjZjZrN3VQNXhKS2gzNGRDX2lyclNUY3lCX2JJREVsWTFhQmxla0ZRLXAzeEQ1V3U1ZFZwZzIwYzJmaGo2bjlkcDlXSDlGSkxYc0szLTlLdTZscVBuaTliaHhmS2pUQVFRVlBPR2wyQ3RVWHRjMGw1bmY4RmVsbHFkRTJoY3hBeUZtOWs4c21EQU8yV2VWM0FSek9FNFZkRUR6SWE3Mk0wd1VhWHRLc3dLakdxVmNvMklQenNpemloSkdudHU5djdDc25zOVNDU3dwQ04tOUpJSXBFaFJIVTQyYVdxVjQyNTRoRVJlM2Vrb01DbE1PWFdDclFzZko5ZlZCZ1IyVTVNS0pNU0o4MHQwQm40bEtNOU5DZ3d2dG10amZPOXJhWV90QzJUcWlsZmVSM0dsaDl4dFdQcU1nQkxIVENkdmhHM05BVXBqaHJUQ0hkQ3pWOEpWM3dJLWt1T0M5bUN0dWdVTk82a3JjU3RYMFpPSXpJUGZRaENJNklXMlowZ0FEU1JiejdNbm5hVFdKSlgxdTVyZ0VxZW9Udl9XZUpCM053TTFKeXR1bUQ5akdkMzZoempqa1cwbHBVUjB0aWFua3lIR1lFUVNLVkJSRUFIRzduM3dTaHRnZW94RUFVSkFhSjlWaVVHaUZzYkx5c095S2dLdU44SGhqOVFUNEJkdjRiRm9vZTV0WlJxZ1Y4SW1oNl92VG0yaGJIemcwUV9kN1B3V2E2N0xQLW93dHBIMFVfUGRsTWFZMU8wWjdNaTVKajhDVGNVZC1kVUlhbDNPTXZDMlZJekpidWJaTk9RRG9pTTBZMjZxNFIyZXY4bHZldThTSFZHUVNrMWRrZ0dVbjg4Wk9PUno2M0x5QmdpU2Uzam1HZ2tlZ2tVcEIyYnZWUjFHbm1nVV9FS3owenc2ck9TbWZlRHY2dmZHal83RHZ0YkM2RU01RVlkVWFWX29WZTRfUm9FNGEwWUJuN2k4QnIxYmdjc3ByLWxqMjByVlI5dWVHRm5fTWREZWZDSThKTzlLVzdNV0VreFJTQ2VORnNPQVBVSWxSY2s5eFk5QjBXZVZMemVGalpfM0tCTWk1LUltbzY0UTNEN050QnlZLXd6cmR3cXJRUDdNU1FZM0lRVHc3QzE3MlVoT1BIMW1xRHdBM2xrWmpOTGVpMGlEUTcxY1dTdkh4aFFvb3lZUGVobjU2dzFTVXNVWElyTGZvMHA4eFlPREVtcXdoRWEwMVRxR0hPUXB1Ri1xMjZHTnk3WHFqRGlGX3NXZ09QZ3FNRVNnbXdCaVVEdXZ3VlAzTEN2b2JsY01vUy1LWUZGX1gweVg4YnR2YWg5RUVicWlIbUQ0bVBZbjg0Sng4Y1F1R0pkaVlTU1prcjkzZjd0OVJRcU1nck9LTktPSzB2cEJHZS1NSHBKNGprVWxlUUhJemNyQTNlVXdQZDNwQk15SkwwZEw3Tk5hRVgzTHZaUmdUakQ4MUhxTG42bkE0OWZ1LTZWVVhHYkhvOHdPN2lZLS1Zdms3QjhDb2plMVpIRm1GZnAzNkJDUGJKcDRqclI1eHpQTUZyRjFLTmYzTW9WVm1Celk0d01OMnFtNkZqbGgwaGZTaU41bjZINjBXWWFVa3NiU2lqdVduWWJKbDdTZDRvQVFpU2d2LTFDSXJ0SUh1WW5Kd256Y3BpQzhpdzNkY3FzTWpBZFFFeWNVcVhvSkFxWUpFV0pMeHFDSE9uLW15bGVsdjAtR2dEUjVQNWFydzkzb2FkTHFwR1RaTkdLWTNtRDUzV094WUJNeDJydzRvS1dMZW42ODR0ZGx3cDY2aXFiMVZtbkRjb3ktOTExQXgwbDNDQnBCalZ5Y0lkR2xqR2FzdWlXZmtGVnJKVE1KUmZwRUNQNXlpdGhkYVNDa3B1aFRDWWZZM19JTUVuRlRodXVxZkRLeklRYUtSUFVjNlI3d1poN3dwU1pkU3RWamFwQjI1ck10YTgwNTNmYWQ0cGwyeFJvOEtzdUltV25uZmNBMlBOQnRpV1IyOTM1Qmg5aGVDakdqTGdkc0p6RU00S2tSc09Ud2d5cVplR1NvVmF5WWVaNUhBZzBKRWkyWlN5bUMzT1RRb2V2c25rWU9uU2VRd2h1Y0ExdkExdF9JdUZnYkZweExoUXBEaGNsUUp5ajAxV1ZOWFlBOHdUYlNZY2tlMGhIX25Uci05R2tkc3hHOElPTnl1YUw1UVRHUXJTeHBTNVd3VXpTWElIMllHSDZTZHFuQ2M2NEVDX2RmTmJ6aGtxa09TaVJTbkN0bkUxaTg0aXFkRDhMcGM3MlBvZ3VBNE9MbFdRN1lkd0VnSjhoYUdpUFcxNE5KYmxqUTU0NWdDQ0k1S2tuUmd0SXZxT3BfRXFmSHZfSy03dENVYnA1Si1kZzI2MTlnUzg4V0RrLUlxOGZoU0t5RmlSRTZva1FWTTdXZjBRaDFYZlY5SUxLNnM4ZEZKM25WeFYzSjV1YzhFOUg1blBSUVFZdWgtT3BMSjJab3RFNGd3YXF2bGxETFhuSTBXekhra2I0QkFLMF9DcGUzQi1ZRVViVmJaSEtqNGhvMXBsTGxPUTZXMF9SbF9VZmkzeVVfRFoxTFFwamtvT29CSWN1ZzN0Ry1vb25GR2x5VWd3R3FHQ182RVZqMjBoQ1FTUTBRNW1rdU5fdW9za3g0ZTJVR05rd0t4Q3QzYkUzTUQ1WlhvSFVqcDlXakV4ZjkwZG4zOUtiTXo1RDVmZUxCMkYyRTNENWJlQXU5TzdYbEY0UEd2RDJqQ0lwczlEc0J4Y3dLQ0p6QjdHR2dUdENjOENZNDFNdGFpbFc2a0pSaWJMaGs4eldWUmNwYjNteW1KS3RQQ1BkLXliVUJrQWMyQ1NXV0dpWFloUW9TVTVjRDNhRC03Zmt5Yk1yYlp5RVhPVlRxUEZ0Nm95dWd1NVEybzVoZFh4YnNvX1lYQXNhUDBrVUZKTTFJR0F6ZzYxZUJPSXl4T2hFME5YNHA5QjZlNWo5ZWpiRkotRWNQVEdybF9HTW9IZW1OU2Q4SkdkY0trOWU1OVdhbDJtSThVZGVsSU9KcEcyWFltX2MwN0oxem45Q3pQQ0w5SDFUbWpWaEFIb2YzMlhlT0FnRWo5dzhKZkFNRTFaQ2hFSjc4bVNkQjVtd01zQWt2SThGUUtGSEVXcm5pTXRrcXdmY2FWcTN3dXdsckVzSlR0WXFVNG9MallMaUozQ2poRlpTR3k3UFd2cGpaWkhYcDE2YUYyaUZCTDVKRG5BbWRsbzdtZDRjVE1zcnFGaTgyOEg2SGJmZFljc3BlcW9Pc0FFYUdXejhCNy1zRndacWVzUUNSMy1ZOFJjVDUwaF9WU0dpWnBnRUZYY3R1NURkd2FJRko5Sm5GS3pRemN4cHRXSy1fN1VuMU12V0NIc2FTbERwTWcxazNQdUxKRmlzaDVYNWlYVVpMbmNvbWpDUE5EUGpEVDJlaWRPRkdST052QU1vV1ZSb1J0MVVlTk1IVEczTFJ0TEVhd1QzMFdMMUtfUm91bUpHVzlob01jczh3dTZtdDljN19hMEowQzRvT3dwVGE1ZlZTQWJ0RjcwZE43eGFnNkZucTl1enNMcnQyaHdRRS0zUlY2VVJ5cTg1MXY5NW1DcWlBOGkyNFJxSzlhVDZsY0ExRllqUUZXSER4cWNaOG5UWUs1N2ttaktzV05lV0tNaFB0TkprN1M4SEVkY09zSVc4YjhlVnRkM2h3R1ZrOUhtanFTUVpfeWFSR28wTGwxc3NSMXBWRHpWQzRTNUxkRFdFdW4xbWxSYUQ4eXh6Y2Q3SWRUQjU4Q01IRWxPdlZjMFpndWY2YmJ0Q084elRXcXBROE1MZl9nUng0aVJicElDZXV4M0NGZk1WR0tOOFp3WDVydG9XRHdibWFTMEVxYmswQ1Z5TldpOFo4WXN0N2x0bUNFUFR1WFhxcmltY1VrTHpybk9VXzVfdmswR2s4NlBYeUh3RjVvUk0tdm1CbW44ckp0R1lRa0FMNWV2MWxTaExkT0JMeXlNbXpuTHZNZlpuQWc2UVpXUzUyUHo4OHRTY0F3U3ZfMWdzRnhsRkhqRzBqRm0yVFA4SzdwSG0wTGJXbXlGaG8tM0F3c0E0Y3plbFoxWnBvV2tDTUxLMVBnZmozVDBrV0l2RUI4aW5Nbk1MYVI2NXRVUVFrdE9RSGE2a0pWeUFVVzlSc2xzWWVpTVcyQlFMV2MzdS1HcFdTNnBLVnBhbHV6cDVHOERmWWcxc0pXUnYyTEtfUEhhWkVmZ1V3Nkg4bGZ4eXYzNnZrV19YVjJISndZMTIwLU5DT1ZMeVBKcEhQYk5IdEJUbzFNMDRTLWhiM3QxRVgtd0pZTnhLdTZVeXF6ZnU2S0xmbUE2RnBZWW1qcXdOZUxfMUstMkF5bU9sNjFHdmVuR3VwUWMtQ3BtQld2SVg5QWZOZURkZlotRTRRRjhwQlZHcnNXSEo1U1NDSWdNblBvZlBHQWkwdHFOaWZNMmNmWGQ0Y1l3dGstSjJnWWw0eDVITkZYWTlNVXNHQ2lvRWpFYWJyTFpuLWoxZXFmZVgxS3Fpd0N6bk1kd2hacWFXY1lDeUJsQjhGckN2OHZZU2dxZkJfUlM0SjF3VTNIbHhHeGhVSU9pcTNXRmV6WjVVWV9qRmRxTWdaaHM2dFlWbkE0aVpQLTFEUzNuenFEZjFjb2lGcl9JeVpGaTlUVjFGdzk1eENJQ0VUbEtSajg5Q2Fmc3RkLW1XT002Z2JmbEpoUHppN2xyMGRoenBGeXJESWpFUlJlUnZoZmswRXl1UWd5cEdsOUZFX1FfOThMVXZZNk9wQ2xDMGtuclpHV09hMjVydzg1TlFSUnBYSUFTU1BqLWgxdmJLeW11Q3BLdWNOa1E0Y1JBbkNpeF9RbE9xR19qQVY4VUI4LVlGS1hxNTFQMk9mRG9ObUhmY0hUQVhtNFZHQ3dEYTBZOEIxX0JRcDF3SEQ2aEJyUjFPdlFtdVpHVkF1T2EwYnBLVEw4bWVWemR6MXNGaWJmV1phUF9WYW1lclR5eDdjVFBkbUZGLUE1b2JRbU9RVjlSTDFIWnhQbGRkTF8wRUJDUVc3bUp1UHNDQW04NW11M2t4M3VZNVZva2FfTXJIS25qaWNFTHFORkdmdmoyZXBvWTQ4QkRWV3NmOXFWNHd0amVHOG5udmhHbTBabjQ5ck13RDlGdFBRNDlNNjM0NGJXUHJzVjBTdVBEelZSNEFjRnpvSnJROUYwc0ZZSDNqdGFjcERmS1hJaUd3U2tlS3NIajVDeG5TMnZNSWk5V1FGa1dqTTJaclhlenlBTnhWZ2o2cWlYZHFObTBfQXlsdWQ3TTZXRnd4RjMyVi1nZEFZUUZoQkJjTF9CUVZPUWR4bkVBZTIwd2hUMmp0WEdRN1daNFZOcms0SkZTdlpvN1FfeEtJS2RINzhXWEVNOEthTGdoajlRV3lXeW1SQWRsUS14VUcwTWRBVVNWb1RBbnpoSGt1MzJ3OXdpM2JiS3lfU3A2T3JBMWxRQmNreEh0RmlseUJKZm1KZzlwM1Nid2owdTNYSVQ2cFRNaEFMVWtHNkQ5NmlaYWJOVUNFaUxSdjBUTlljRDNESVpWekNDQVA2eGlRMWQ2c3p4Z2FSS1RPTmZsZjVNWWpkbU1sM2RxY0lTRXc2YUdoQ1NBTDAxZlF5T2pucHJaRzVQNC11MWh0SXF0dEpMckViSEhpbmdTNFZsbGhBZjJTOGJvUkVMOHdHSFA4VGZfYk12Y3J6c1kwQ0RQa2gwY2Q1eWJ3Z1U2NHRldHcwTUEtdnlKUFBxYWJsUFlNR185WWQtQnMxVkVaclZBUGZlZ1hPdTE5bFlIbUV0cm14QjFManZ1RjNOV1d3S3NpLVJ5Q0pHZG1JZ1VLWEhzM1l5WktNRmpuUlAxRGg0WlEzanhuX0habHpWb2UxME1WeWt1Wk8xVHFCNFVfYm82VWM0UUxQcmtMYzNMSW4tSXVTNXFQTTlmekJ6V1FtVndfYnRzMmtvM3ZiNHRNWTQtY28xQzNNTlg5V1Q1VkE2d3VTOWhYNmswWEpsT1dibThQWmsxMVJpQWREWUVHZWdLUDdRdU4yVHA4WkQxdUNBSW1rcW5aNHB3RERpTkE4cUZwZ18wNFhicVRkOUZpU2kzU2Znb1p3Yi1kU0NnbGlGYXpoMTlLcEJQbjlJUVAyaGp1TT0=)
          CM_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmZHYVNRRFRWTkhJd2Y4VHVTVTFmYmhpRVZHeFFxZkZMVTJwQzlZSk12SnltS2JMZEU5MnRlZTBqQl9FVWhGWndwWE5UUXBfSVdBZmpvZm4tSzBzSjl4M29GN2c9PQ==)
          CM_PROVISIONING_PROFILE: Encrypted(Z0FBQUFBQmZHYVNsS3gyM0x0ajI2OEtvTEpicm1wSGNSMHczSXNFdXVXa3BROWIySzdVZUpZZjk1d1lZandyOFhpQkx2R1RmcS02VVN4enkxMHpHelllbGd4b3FwYm9yNkU4d1d5ZXNzRFJfTUUxdXl3MHNKdk1BR0NhcHVROS1kV0RDRnBFUnhxVXBfcDJDX1VEc0VEZ2ZxQTlIRnhIQmEyS3NiNTJOdjlUQ1hXNjFHVXlYajhiYkZGWVduN01zdTU1RVpBVjZBRkFSY3BvNnktYTBnZ2RtLS1ZZl9OYl9OU3RBNk1oenc5ZUt0aEt5VEZhajl1eTZ4LU9LcVdxd0lHX29DWm4tc0hkeEtKNHltWnJVZEE5NVlhcFFtUURObGFNdS1tUnBNcW5FNWNGcURhSHd3ZDgzNXhOOEdXZVlxQ2F1YkNrMXNxT3BYQmd6V1UtcWVINTFYYnF2M0FHY0tpRllhOGZ0b2R6eGdzcGhyOWl5WXVDTGp3cTNoR3ZyU1VXMVVfcU1vLVRnQTJIX0x6UUdVcGZBdUZVUG15c3pQRUtIMzlla25NeUZqTm13LXMzcDk0aldLd1ZSLVhweDdGVEQ4aW85U0ZsbTVyWm50Ym9yNHRFcWo2VVRyNy1xb2ZpckpQVnlDTG5QXzg0bDg1MzhqS3htZDBaYUcyTkVXcHY5elRmdllKQ2tYRE1JQ19UOXZaVW1UTWxfaE8xcFJfN0pUUWljeE1fUUVmZmxDbWlOTHZIbHV0ZTRxZ08xa1BHdzkwb1RGSUpPbGF0Y1B2aXZRMUVZVmsyZTBrbHY5MEFadWJCaDk0Z09Ia3Ria1FqVHMxb2dLMUVoT0JYZF95M182bGoxaEk1cDlZZl9iMDB0LXJDaXVXeENFOVNFcG9rbUJwRnREb1EwUEtGOV90X2tsODVxOW1zWEctLUlsbl96VkFHdWtnQTVTb1NFclQ4bkdoR2dhMGpFdGMzaWdZUThfYV9oaWlmWllZT0gydVJ1dXYyM2lBWnRYZjFTS0hrWkVKMkRER2xiakx1bEhoUjBsSUFEc1BoYldXc3ZNWDBXc2YtNmZIZlVnRWlnbFVLSnljTXFRTldjWkpQaXpGeUlsbEpnRFBQZ3ZucWhDS1JmRUVUaTFOUUNQUnZaTjNzSG9UZk1fRjBvX3dGMkdXTW9aUEJrTHozY09lWlRZeXpMZ1dZeXVpUUI0eXdqbHhRUGFZUnVjQ2xtRmUyOVR2ZGd4MjZHTE9iMkZZUW5MakZXc293cHI0d19aMWIyRFJtNG9lZFRFa01xVTBLR0puRDRNWlZ1aXR6RGdVSDEyRFl1cVR4dDJ4RVdBaTNubnZQX1Z1dUQ3UzM1YXdZQjA4Mk10NGxOUkRtU0RuN2JYcFpYMW10alp3N0RTeU00RzZrdUxNdzNtMDVrYVIzZVplVUdFQk1UWUhMc1Jmc1JDckM4Wks5OHM0OXlyb1c2NXJrU09kWGltLVFkei1GdVl0TFhGcHk5TUhMQlhUMWFmZHgyRGJ6YjdEMzh1Mjk5bmlaOHBMdlUwX3U3Rjg2UVREeW8yek9YTGp6empVVkh3aDFXYV92SWF3M1M4cDAxZlMzRlRFdmROcEh0MWRZQ3liMFBfUklaelNXVUxKYktZZjZwMFNJcVp3TGFGMnpsSTdMUUd1Y1FlSWdEX0pjV2xPZGtPZHhBLTdtQ0ZWNFpmdHBtMVVYM2NtRFcydWlFdUVhQkxNWDlxNlRpc2Fza05IdkVDanNBWWt5LVRsUWJOYl92VE5wZWo4clhyYjJuUnNsUGZtUkxOX0RjdEp5ZDNuSkJjc3NnamJXUF8xQ2ZkMjlybGJmNll4U1AwTFA3aDNfdGFVN0ttRVp2YjBSN1JMcFNoSTZnR3dMdUJXb0VhUGJSUkVxNkJUdkNoQWczQkdBOVRlWFg2WjBHWGRuTVNXblV5cUNGSXpWdjlDMG8zU2lKTjc3cmJ2SHNoaDlhaFpSUllHektWNExNQmoyazdsSmtjNEhCUFF4cHZ2djQwcUpsckYwSTlwX0tiUzRKTjNGNWFXeUI5Z2ZSTnNTbnUtWjdsa2xKYTlNMWxXZ1ZIZm9wVjk4ZHhESTdlT1ZNWlB2UmZCMVZabzlQOS1TTGtaS0phUnhzWTNFbGZNWHBjaHRRT3pwdGgxTHo0UjB0bWFrUmtoR1N0SHJWSjBwSVdlbVNidG5Ha1JDN2hHRElBeGRrODRZYnN3RG1FSlpsMEZGVm1PVUNjbU15emhaNG9lbUdMZFI2QXEzTE1vYkhyNWE1YUlqNGUxdk92MEpRcnNzazZMS2x0cWw4bVRacW1CbmNjcC1WbkFYbkJtaGlQTGxlM0V0a1h5WVNBOHV6OXU3T2MzNEV2WjlENzdlenRjSFVadXU4VkRKNVl4YnZPbWlHVDNEMG9pYjVDN29BZU40ZG5FUVVFQWlBeVc2b1pPaU5UYUdFZm1jOU04OE1QQ3JEN0hIZ3Uyb0ozcU91Sk9NVHp5cnlJeW1ibUo4SjlNekxPc1hVNXY4ZTRWZG5UT1NiLXNQSVFpbTB4Q3NlbUxYZVlZUUpCRW9rRWxPb0VrMUs1MmdST08wczBsRG9ZVkRIaHNyaFhPWVpaLTN3b3lpckhLcXgzOThYZjA2VWktTHpzcDROVEgxamNxRUx4UFhLb2J6VUxmOGVNYVNrcDRYZzRCSjUtTWZFX2JqcGJmTThzcnBVSERmdUZJZ0FReUpGMGNLS0ZwNF8wVE5VU2NYNEhkMm1aVEZxWFlaejRzR24yRzdlaUJZYVNPU3hCZnlkWGdIdkw1S2RaYmFkUy14VTVxOXp4dWYtV01sNUljeDFoZHdVczdSQVg2VjI0aEtLQWlfN0FfZ05sSXFONWIzNzRFcEhQYjI2UFVHRnBlejk2c2cwdW04TFpvYkc0ZGxOaDl6UlFQMHJST3BzVU0xQV9uTU53d082dnVzTzlucXF5ZXJyN2JGUV9iRVJINkhxYl90cUFhTEE0NnBfbzY1alpoUVlXLWw0M3BrblhxUmRTbUZPYjZzNDVQb1J1TFBvR0lpTUI2YWowdG1DS0ZBQUtqMy1FRW5oSW9qeW5zSElfWkF6YjJPMmhwbFE5X2RCVUJGaGVHQU5vS09tSWd2cnRxdFVIVUxLbFYwajhnVGdxMVdINUJEWkI4U1JYUkQyOEJCX040WWoyZU9STy1mZWVDcDNuNlNuRk5qWEgxQUpqc1pIU0ltdXp0T2RmZzB2VHNULWt4SlNGYjBMUXg2S0dpSWVvS2Y0eUxxRnUxNGdDcFk3RnJNbDNhZXl1cWJBWkdCaXBuX0E4STRHSjd6MFVqZjlwT1pXanMxN0dhckxlOHhsT3FVMy1uN2tXcmVka2hZNGJXYS1Xd2tONEFXZXhoS3dkRkZucDF3ODFyRnJUczYzQkNvcmF0S2ZmdVFIZFA5aENJZmNMRThaOUFhWUxxRjhQZ0RTdWtQNEpQVE1Nb3RvTmxrM2VheDNGWG4xMlYwWDNMYVdKZFJoVWo2MlNOTnBoRUlxN0gtSkZoNDhjQnJTUC1fbjlnTXNnQWZ3Q0lmdFNoUWVMQmEwcmJzbkpiVXFwdFB5MGRKTE52bURIT2FCcHJOTjRQUDBhSXdMcHJyOVBlQklwSjlicGJ2V3JCa2VQQUV3bkFMY1dtVk90R1NaNkl5ZlZqcDBYbU91cTlNek52cUNsSy15bUlxeTdXdGdLNjU4TEM0c1FSaDJ4X1JRYkNqN3Rtc1FfcmJUTllLQVRfX1BRczVWR3ltWTZxR0gxWlUwZEFuUktMbHczRTFkeG5JVWozaXlsOFY3Z18xSDRNb0pFMFZIM0NDSFhWNGFOemxNZlRkVjk3dGRoWmxSUDlpb2hFMF9RUnJtd01ReGd3Y0FXcldkRzMtR3RBZ0l3TFRTRlg2S0NMckxCbzZJbjBNd0pwVzAyYlpTbGlhRHdrczVmQTQwVXA5VUhMcGtyUkNBMzF0VkVoMG92NkhQY1VnUmdLVkl2UVZHeWk4VTlTQWl2MGxkOXZwSXZBc2JVVG45UWl5eG1vazhMWFVSdkdEeVpwaXF5QVZIVFhJTjd0TDNEV0Yza2tVclNnYjEzc2RNck41VlpTdXM0UVJ5cmF5UkZyQTFZTFJhNDlWTlUxYnlhczFqVkgzQlU1bEtzbUc2S29QTzh2S2RydWZwQ1VwVVdBRXhUWW40U0t5MnNKWmRKdVF6NVRGNVZiVlp0Y25Id0FIaGNnUmtyYzZvUzFZX0pSNzJzMzNIaGtFVUltcTAtNW5BVFcwUkJSUmJVbEVHdndEZ3BvUzNvdnU3QkFEQmtsUWpMNGFGUGdPLUwzS0lDSDVVYWxfMHU4UzlFQTZfeklXTU9UVm5qUjVWajFqZzRBRXVmQ2lEVjlZYnBEVmRFY1JTc3JEdEtJZXJsaHNqSk9aODdEMDVsZjFQQnFaOEItZVI4ZVpUU2FkVjZxZDh6bVRMRmRIUlhVU1g5NVZJSVRZa1FYZng2aDNJd3FVUGp6cDZtLVZ6REF6TW5zZnZUU2R6SnBxM2s5NGpoRzc2aWJmb193STN2OHI5OWJVaFZack9JQ09nZEVySjRwdkhNdDRhMGlYR3l4RUpDeGFxNHh3N3drM19YWHZnVWdEck8zcjVCNHowNVpydjNhQzkyb2pJOXBlMWt2TkljQUhONWtHRFJFRm03N2pubXhDdVhvY2hWazFlM1JjYlRGMGNQWVF4Y0lTcnc2REZ6YUZGSlVoaGxfWjVFZ0VWYm9IRkUtYXpMRndmd1dkMmRLUm5BUFYya2p1WnVEcHJxRzFzVnFuSnBNNE1LRkxfUGJzOXI1M3R1UGxDNUNDUHdEcnBXQzBmOVBZdE1zd2N0MTcyU1Jnd3duWmRabmFObF8tYmtSR3gyZk5hejQtUnFXYzRXQWhXUXk4dWRvOFBxc0txcVpPdExOSlRJWGJFbnBnUVhjUWVYOUkxOHNDUGc0YTFGN3dUZFpSSU1DdEhpVGd1SDV2Tk1rTEpTOXJ5X0JTekZDeklQMTFibHRFem1fV1pnQ0Zmb1lnVUpEZ1hXalEyUEpHLWR5VUJ6UzY3bWtReHlSd3ppb2NZX1NPUTJSbGE4dno1bTZtR3dhY0d1OVFvNHlHV2xLWXo1MEtXT3htNHVOWC00dDlGYXMtX0R2bGhHY3VzSTU5R2pkZ0dQaDJUV3BkQ2g3RU9ZR0dReWw2dV9qaElTMHVMQ0ZPaVJ1VkRmZE1EZE50T1lZWjN6Vl9tUjRiMDNRMjBfaEV1SVduX2RScWhvWXJtS1o1ZTRCV05pMDYzd29XNjZRcDFEZ1ZRakZIWWtBamtfUDMzZ0JUTUt0WElCVVctXzJxaUg1bW9kMXYtWWRyU0xETWVrWUVncFJ2RENhNjZoMm9KZzBUU3hCc2U0VHVnSEM2M0pvT1g5NWtfV2ZqdEE5UnF1Z2djZll1SzBFSWMteXNwOS1mMkRwcUlkT0VVcTktWU9DcHUtTE5OYTBQdHVBb0pzeC1yRl9rSUwtaVloMUo3NUdUYnRFUDlmc2VMbnpJczVZZG8xS3Y1U1VZZ2ozcnh3bGRpTDN1SnRvckVyT3JHSlduQ0l6cW9jMEIwcE1fRHUzdDVBM01nOHZzVGtrd1NiazlybmZmWGNKNzdkNkFJRHVucHNFLWJoYjItdFI0ajRQT0FjSFlEZ2tqWXpnbmZDUjVpWW91bEUzazV1RHZFTEVoVkNIRHhGUFNmTUJQWDBzMnZsSEdFRXZEamROcnFxVzBMTE03SFc3bHBSV2VEWVAxZUtGQ29Gb3RnR19sSVZTMkFMWkFiRE5kS2c5a2VnSFpGY1BEc1Z1bEVLZ2VBVl93Ri1SS1dwcHpwS09GUUE0bEZpZTFLMHViamdsTVl4eEpXNERFUk5Nb3BMcHJZTWh6Uk04bk1MdWlvdjR1T3h4ZDM5QWVoLTFXcFlTcG8yNUtENk1iNTd0N3VZZXNibFdVYVBwMkxUUktGZDFVcjRZZF9ocDJqcnVvSUYtd3g4T2JlQmVZRGQ4WnJiSG9OYUl6NEZVNS1td3lvVE04c3d2MVZjUUpzSnFCSTNLVHl4TmttWm5nd0dYeUd2a2gwdG9vMklmM0dmNlZxem5HV1pqMENHOXkwV3d5blVUSjB5RkZCOG1FSkFUZl9XY2lMNXBUVk5ac1lyMHlsQzVELTIxNi02RW9xek0wUmdzQ184RXJsMHdHOU1nQnNWekhlUkVjZ1RUb3k2UElDRllCbE9HcFJsc25zNWxqX2Z3bTFtWmdhcS1pdFlDeUoxLXVuWnlhcS0yd19XdDFNbTJxZmtpLUVTVVZzbGpPaTYzRWNTLW1QSHJYUEY5MDhEUFNkTHlqUzNTVGxqY1BVNV9lMHExYTRkb0dIbWdrblFDcmx6NWFIN1RRYTlUNmFlTFEyTmFTMDQxMDc2MlA3TXA0UjQ0MXM0Umpxc1BfdXRrQVI3V2NfZWdlazI3ZEh0YnhDNktuNmNBS3VsTU81bEFDS3BiOXdacGhhTkNqeEpUUWlKVlhVam1nMk12dkl4cnp4QUNESXNkTFBrUVllampSNVZmYkZrSzhzSzRfdWNKOXVTeGFmRnA2bnBPblhnYmVtX0U4VHlBWTE1dTdnQm5zOW5mUUFmMWdPV05VdkltbHVjOWw4dWpWQXVPLUhGUXExN2JGcWJqSlNIV1N3NngwUk5lQ3lDV0thN2piLUNab2VBYTc5Nk5rRlNSbjRmbXJBbTBldHd2ODZhRXJzZ05pcjM2V296b28tanBXYWpmTzRTVXBKS09PNVlsdl9raF9xM3lqWFBKajlYakk1TWVNX0otODBTZ3RZa1dzeEJackJEaEVNcXBxaW16Mk5TYnVDbzNXQmlBc3pNUHdVOUlkcVpSdjVFbUpBd1B1eEZMMW1xdU02ZVRMVmNJUC02WGlwNXc5X2liQkdxTF96TGJyZDgxQ3R6c3NJOEluZG95bnB1eVFINFQtY0dFUWRWNVFlSHJwcTBOSFlWSzA5dTZVRXJJTkZpOS1GalN4VEJoZFN0aVQ1M0hqdnpsS0YwQ09uOFRQT0dXX1dlMnd3SWlybjdkVFYwdHJXWVpzSlpsSl92VDZQWm5mbkZRdzd4X196amxoaDFaSWJfQ1pWOEYxQkkxVFY1SXczY09rbmhZWlJXTE0zcmE5S1l5bzdaRFVHSHg3QU05X0Zmc183Rjl6MmdCSEFVbmN4NzZiMzZfYUNrUEdvb2tLUTZ1ODlodi1PWmFQVjY2T3lQOUpHdlhPUzBzbmJ3QmlFT1BsZmswaTB6QWRVZW9IUWhtNUktX0RoNUtCNEN6aXBfcmRENzVUQW1aNk41T193Q1BBWnlzRkZ6Q190STNpeE9XSVdBZjhqOTdlZ3JwTUhOSEI0U1JWS0J2WUdwZ00xMUdsS3FXNGItbXduVVdBVjc2NVdQOU9VeTBFaDB1V2dOQkM0M3ZrUHNadEJxMTd5WXFyMjVRMVVZRzRIMW5tZk9vbVd2MXk2XzI4a0dBbGJ5RXhwbmVLZ3FadUZES182VXRDQUdRb1dYTG9FUTl0RG9CaG1OQ2hGWjQ3YXFPeUMzQTR1VGpuMENFdkpYTlRrWXB1cE9qamFnM0RvWjJtWVVIdE9hVktKeElrMjZQcTBvQWdSc1I5NFhIN1BvbWE4S0NxUHZfOFdXM3dVZWNia0VJVzF2cXFsWmZyUEZVRDRIS2RJZHZ6M0YzRERyV0FZQlhiczVGd1BnWDk0bVcwZ0NWeTh3cEpDSmhNMl9BRFVOcVlUY1Y0MmpQaksyLWtNZlZQaFdzNUhVWHc5eWwxX1czTkpxUEt2eldpRm4xbUpxWmJwMzl0RGNnRExvelRXaFF5RExpQlg5NDVxV0RnemEzTngteHdONzJSblFJRXZ2M1MwNDVOdzZ1SVk2NHI1YTduUHFVcE1YTFNzYmJ5ZXcxQjB1T2N0NXVFdzVObHBrS1VEeXEtNmVUOEdUYVdoR21YMkVGTWE2TG4yQmtEdWlPUWFEMXl6NmhiWjZPa1dBTWE2WC05NGRXeDNTbTBhdF91TFFvSUZKQUY0TzBINkdieUtaZ05VUC1NakR3R3k0Y1ozZ3F6YjZINjA4LUk5UFA1MW82UkJyWlNLX0w2UXZUMHdfRGdkNE9WeU4xdE1KbEZfZkMzUWxVMkpIQjB1NElIZGRoNmJuazBJSXZEVS01cVB2TjdLMWRPUmYwRzFZOVliX2Znbk80VFFxQVBPQmVoYkVMSkVvZkxPRjFtWU5JbHFlS2pkaGlPNWhqd3NWVmZrTm5OcEtKX2xhV3F1NW1UWEJ4Rzl3T0lrdDkxc1FtOVZockNGMnkyaXNRZ2Vsd18yRDFRa0RoZHJTVlBJTVFKT09WMWxCdjFNN0tqR2xaUWtLdWhUV05xcGJaejhGNy1XTUdKc3ZfLV83dkt5eDFYMHByTjU2Vk9UZlNVNEFaT3g1SlVONnBRVmx4Z3hoQllBUW1ucUJNeVZ6cjJ5NWJ2RW5YMkNqUlhMVzdLSEhPeWtGd1l5NjlkbG8tYjRvR2pUMC1zbmptZDhBS3dRZTRmVHd1M2d4Q1hOZHhoekJ2eW9oU1ZZTDQ0RlpDSGQ2MTI1SkNiaENXOVJGOGNyX3dyRXIxZnAxNzRZUE8yd0FzNV8xMWoyWlRzQUZsb281M1VtU2JPNkltdXUtUmQzajc2WUtNZ2F0ZXViWDZpbHpLNjRhWHk3bDJJNTFJM1dPMjQtZmlXS0NSaVd2Zl9hVGlWRU0yQ1hkZHoydGptelZjaVVVNy1mc1d6V3FLeU9VUnJkeHFQTlV3UzhnbjJRcFR0S29EUU10eG1TOXZHMGx1QlM5TUJqN3hFQ1BsMHJ0Ti1XMXFKd2VVcThxN2N2WGtpYXF6aklDWXNmMUdLUTN6MXpfTXhKQWdWa0ZZQ2ZsUC1RcU44eURlR1g4bkMxbHpkbXJKWEZEakNmVFdCeXhjOVNON2FiOGsyeHdMUW9FdmpySWxBRVZNYjZ1R2EzMWNVa2l5Rm9hNS1ucGFLZ0tnTC1rN0pSNWx0SlBoQWIyTkNSdWxiZVBDMG92WG1hd1FONFk4MktUUFBmanhDbkZIZU53OTZDT2VEdGJ4YllLY1J2OGhyOHRoN1g0WWNiQnRjNTFBcXFsN2s0bVU5SmRWN0EwOUpVWVhmNm1DWVM4QkZaRS1NWlJfNXdUdG10UUU1RGF5cHB0dFRMRG9hc3dkQ1BIYlVlWVpzZmdEWkNaN1dqakxlR19MUEN1OU5HXzUtSFRlMVg3em1EUDJRMzdaMkJQLTBCQS1WbzFBYXl0SlN2aWJZNEl0eFBnMVhWdW9IdGluLUh2d2NaRDMwd0liNHRVRGdaQzJOSGVtNThSZ19odGIxMmJGWC01MjEzTDdrMXVDcDlfSjBaQ29zeVl4aHlINXJTcVp6cVF5VnpXU0c5QnZ4R1dGR3djemtJWDN1V0RpdWVQaTE0V3hmemV2R3VFb2t1NjJCclYtTHJqS1BmZUFXMkxiOWUxMVdkeURXd09zTU43MkE1c3dPaTJUUHlEUlZCQmp2U0dISUlYbWFYemdxamt3NzRScGlqSjhPZnFnZmx5VTg4TktIUmIzcHBDWllQdGwyR3VoSkQ0UjJ5Xzk5eU9WR29pZzZpQTJoNUVSazZIQUZOX0poS19VYTJua2huVmsxRU1nb1RsZmpKQkJkdWNzRXpqN0p3b0JWdWtodUlwMmNZQm9zeTRxNjRONUN6b21sQ2FmWXplWkNXQXpqNGd5S1pwcGFKMmtaTVBBRXVHMU5zZUZRWkxRRHJ5QU1aRHBCN1k4bXlSc0RISkdBTERXMW5CN0FJS1NUSHNJS3NsNFhqcW51dlA1bmhxN2FnNDhjeTNUMlM5bW1zeDlSenlPclB0WmtDWFFYZ083T0gySU1vVG1zSXBtcnBGbF9VZ3RPdG5vTnB6Qmt1X2oyV20wTktVell1a0ZKbjBHNFd5Tk13YmtnZEd4RUNxNmFnQ1FZNEJJOGV4Wmh3bXZPZUYteWZyQzVUVVFFMHZpd055X3I4WkJiQ3RDd3Q2STRzNTE2Y2N2OHdVTWk2c0JVMnVCaG9sdWNYbnQ0bmJneTZ4OUx1Vk9Pd2xOVEU4TzJCXzlRcXBXc3UwQXpoU1FnQ1ozaW9TWDloNHFYdUVfZklLRVhvU0tKNnJFSDc3Q1ZXcXpNUGh2aFNCRkMxZWZmV0xGRExFaEItRUZySXVvRDlHZFMtMkVPVkdPX1Q5dlZ0V1RIdFJoT3o0X2lLeXhUeV9rb2ZOTXdXZU1NZlRQMmM5cHBJellmZ1ZyX2l2YzZhdWgzNE1sTFJyb1hHSTNPSURlWS0zMUF4MUZpeHBwTHJJR3g1b0ROU2xBRm1INnU5NjMybGFSRDNwbzZ2UnBHZFFMYWVvdnZOc2trLTJGYlUxZlpTRk4yV1VTRUlncWpiX2M0cWE0QXJndHQzUnY1NU5BMHFLWWVJVE9kNzBVbjhITlJvYlNkYjZZYkU2OWIxVHFxUU01MjRBeEQzM0hhd29fMmdtNDh6bkd4b0hzVlQzMDFkOVZUNlRaMjh0SHlmQlhCUnotZTVoZDh6dHJiX1JSWWxSRmZDS0VybmZudFNLMEtqV083QW5GRHZEVE1HWEprcXV6bWxrczA1V2hYYThlX2I5WlhxVUlremhJMEJHUVF2cUtteFp2Y0hkZkc1RFV5QXdGRl9ycW9BOGRBSEFNNk5SRi1ZSFE3dlV1V1NBVEV1R25wNmkwMm14Y3hJb2FldnMtSG9FdHhYTnRoOFpwWGZDUkdjVXNHYWhFeGdRWE9VbVoxRGlXWmxGSnpRMjBhVDZ3U2tXU1Z3akw2dDNvRTlmcnNySU5nUkFEa1E0aV9CYUhzTFFJbWlCRlA4eXBmOVc3a0UzXzBVYWNBUnNaM19hc2Nnb1JMYzROVlRNTURZYUlaMmZYN292b2d5MWtxRmlodnladWhWdTV1M0ZfeHRodlh1RW5vTjZ5dnJRWUpBZU1nTXFEUVJDWWtfemFLTXlldVRtd2RaeDJjSURTTkI2SGNPeDdVUnlBWUVCdG5UbXZrNW53WHNKcVVWa2I4UHFvMlBKeHZNVkd5dDUxejNtWWJ6aktfb1BZRnJYNXpSMnVGc2t2aG02blRpdjk5TV9jT2t4eE1wMk8yWFFOSVB0UUVjZkRBbzF3UGJhNVhIX1Y4MWRpZmhCMEMzOUtlWDJaZFd6cVRFVkgyS3E2eExnSTFVaVNOMWFBOFg2VXR5aDRtUjA1XzExNHB2NmhDMU8zZ2dMSzlTdTNZRlowZi1NQ2FXUnY1MU1GT2l1WDBaYlFFUVJjQjRhM2d0d0lwNVUwaWEwbmlJUmNSZGpqMTNsZkNaTXlkQngxc0ZmUzNFT2ZuT2dvUzB4WlZrdVFNVFJpcGJHVUoyZWRFdzRVaEZpZ1Y3ZVN1ZVh6Rmd6UGxRNVBBV29YS09wNjlyMnhoVDVfQzFQYldER1hiakpxaGMxQ19SUWtwTFhDcnVWNjlORUQ1d25qWnFJaXZNTkJYV0VjaWxMbHlDN3g5bzJEenFTQjFOQVlBYVhXVW1zemdsMHJMbFRqLUxxYzJabkcySXk5TERkWG03Y2w1N2RTWXZ2TVNOSWFKLW1QTl92TjlINGgwdXZJZWRiVmxuZXROLU16eTJrQ0REdUtiQkFLR2h0VEVGYVUzRUk4WXFtRUpFTXh0bVJtOUlWMTJGdVhXR3g0WlA5bVhvVGljY0FveDBLRlY2TndCank4TEVkTkpLYzQyTWdiUUpBN2N6TEJQUTBVcUxHazRQd2Jocy1NOFdGRFgzbk9ZV2x5V09JRVhfT1NpdXo3TDRsX0FoaVBha19LbU9HeUZDYzRiN0xLcUJvTjBPdVM1OTNLTlg2NWRyUHl0bFZtTzlzT2Z0N3UzVkVoVnF6WnV3ZjNnZmswN2xWU1VQRnQwTDRpamZzdUUzWGdSQ2UwMlJUVXRGb1YwM3h5bDdQQmF0YzBBVVZ4NTgyZXFvb2dhXzJxa3NOMFV0Nmh3QmFpWUZOTHRqekt1QzlVZG1QY0VlUV9Oak9WV1JVaDdEMm1qbGd1WFk3NXNiVDFfZjNpZzV3c0toT2stQjJfdVZjbWJIUVQ2VmRYaVhvUE5zOXM0MXRRZUR4MzItblJ5b25UWWZ6c1FPMnJhUkx6LU9sbWRyT2hmYWJGM3pVX1lTNlRPWDdXU2w0YUxBWWg5YllyTmc2bHhVbXhIVHZZd0dtLTJpaS1MVWs0OGJzUlQ4T2dsN3dLS1l0SmRsWjBuc3VXeGdUakZ3b2dhcU5VUWx2Y0hRZHV4M2J1N3U2aTd0U1ZKc2FGX2R4aVhCcHR3aTFjUDdZZTRJMmZpLUtMOEFFYWxwUTFwX1labldyTXNDM3l6cjNXQkdFdHlRSnl6dVdOUlFsTThoNVVlRHo4YzBhVXRBZVk2WmFNMGlUNW1RcnY5MUVUcHNWTHpXTDRjZW16SjlBQXFsZDVRWWFQV3g5SWc0Y0xLOXR5OFBCZGtzS21FeVlJQU0zUTFndXVUS3BUaGxRUTdqc0NyN3oyR25ueG5PdG13eXdBVV9xdVVGSExUVWpMeENldkU0UEN2WE9ueEgzaHh0TnYzc3VlTVJzVWRnLTJqQWt3bndnVUFkM1owSFplNnZnMTZObzlNeWl0NHBMNEZObWZidjhqWXV5WW9zVDRzVnpSdWZXT3haczhVSFI3SDRGVzZ0UGJON19UUVVGSjlVNEF6eVFXRWFEempXWWpfZE1HM256N1FiSXBpNFRrUTNmTFM5ajRlSV9ZU0Fmem41N24xX0VabWZGYmIxblI3RUNIcE1weERSY3Ytc1dSYzVKOFFCSDkwMU9YblBNLXRqbW1xSUt2M1FtV3pud0RSNHlCdThvUHM1UkhxVUJIRHdsSUxvcHJMQkhla3hIdHRFZmptRTdIbm9lQ0lOcFVQMXlVajRxTDZ3QlZlTHZRNl9hZ1ZZSW1nVzVwN3VST2xMWmxTMnBaa3RWUXVHTzIzZkEtQUx5QjcwbjZ6RGpNSFYxRzBhZ2NQcHRkcEZrSGJYQVkzQVVSenpDXzd4R21xb2pIdlc0blo1TEhNRm5MckJUaWJXbDVrajE2LXF2a3R3MzVDREZoOHFBYjI3enBzaVNJWXUxWC1tdzNvbnJZQlRqbVRwZmlkRVFoX0V2R2E1S2JRUXVDQUdMTXZXaEN4Y0F4Y0VrRnd4SWZyMGM2a2x0OVQ0Q2VaRnltMGp6N2tkUS1wTExtcXYxbVZzTEM0dFY1NWhHUWpwalFGdGQxRVVYbThrZDhfN1NFUm1VLVFDQjRzX3BvTnJWSWwtYWhPaUNZY1NPQXJjWW9yX1ZLTFVsLWZfdzNna3M5TlpsZkdXTklSRldjWUJnTlJDMkVaNWYwX05hRzd1TGtSZm4wZWxzdFZoRllTMHRhS2o0X1FHdzhkMTM3LUVwcjNza29vOV9IRmx4T0FQSElVOTV2M255YUVqS3RvZ1JyYTI0SjZZcFpoT2ZZaUdCSENZMS1EeGpnOF90LTlJVFo5Q3pMMHhIVnBpNnAwWTVRS3NkcXNiZ0VkUHI5YThzX0VLSE9zUEp0UVd1VTVpV1VENnlNSmlsUzIzcGt5aHFNczM5NlAzYnh4eUJoMHNjU0hlNWE4bmlScDA0TklWSTl2bEEzWXpWVEdXMmlLYVE3ajJKRVE4blpFV3JDSmNCSUhaOTVjYXJnRWxzWU1tak9TVnBJc19SNlE1dDExS3AtRWtmbzVqZUZqaWlIb05MeEQ1QmF4enhuczktUC1teFNNVWowNlJZYmRsRHExeTN6bGFlalFGRkZFdjVPaEc0WEk1MEhla1REYmQwY0dpWmVNNThBOTlMdU1LdFpfWmlXWHJ3WEJERFZKNVQtVkFiWEF1QldUa0lUeGUzX3VtejZRNEFCSTEwR0tqbFppX0VzUjVMcC1VaURjYThQV2tkeEttN2JMcWs5MWE5aG9WSGkxeFpETnozdVdpd2gzLUItZTVRMmx2bWRtdm1qV3c2eDZxdkx1Zmg0allSam9WUER0OGVwbkVMOUJIYVp4STdDejJEMUFxQWRQOWpaaThvTUJfWUk4TDhDWFVKT2lWdzNTSVk3VVVRM2hYd1hPYkVrNWFzYTdSWDI0RnNqdVNFdVRjSlpmVi1mSEhiWERiZ0JHYXJXbExpZF9BUkRKRm1tOWF3ZlRnY1hzUTRET1J0TWxqdE1xSTgxV0UxZUJ3YnFmeDBrcGREU21IZ29nY1JMYkxxRlVXTUE3UGQ1TWRoRHdkTGZ2X1ZIR3NGZ1lkckJJdE9rMmJtNTlYekI5clgwMFZBVXZUdTMwM2JXVXhYWnFVakc5dDdZUTU3SnZmVEZDbUItcm56TDVaQmlhUXdZTldMQWppRk40aF95MEtCYm9ram9OLWQ3X29UWnpHdy1ROWM2UloxWnlOZ1BwX2w5Sm1nN2N6WjBhRWpoUUFWNFhfWUwxM1l0X2cta1J2S1pMUWlDMUJBYmI2dWV1RUtDYUtiRmxyRk9ZQzFGaVBrR281djlNZUpRYUFvRXFHZExYaEI1WmpiLTZfVkNkVjVlNlhYQjN0X0kwUUJLR2FnNkVsWkxDT25xRjBJb3N1TGtjeEpuMmU2dXNNR2tlNHlvVngyR3dTaXhWLWY0WHpDcUVMYXRLLVRoOVpEUll5R3hLa0J2RXRERy16cy10MGxramlodnZMbm0wMEMxMTZQdDR0ZWpUSWZidElQbVV5c2J2WTMyWHB3ekVTWS1lNlZsSnZKNmRfblFDV2JWV1pTdUt2STlzUUN4dUN0ZkkyMWtQbm4wdUR6R2JHMC1tWlZOWUdReW1JeW9tc0JjZGxHYk1LQ0pBdnZUQXRHVzNUNGhTZTN4MW5STmkwdG5CLTg1b0VDOEtpM2VEWFRXeVJTRkFQXzFKRDdmWHdvODVtRmdFQ21naURKMHFSNGNLTHRDdHhtMmJlR0RtaGo2WDViODA3WVVvOWl0OFZhaFFRNFA3ZllwN2czSnNTN0JUcHBqck54Mm9ienJMMUNwMlJERG4xWjBZTFE1MkJrSnNWb3ZpbXU4VHk5LVZrZ05uTDdmWFF0c2VpaU9ZTV9YU3VoLXR2OE0wRmE2T1BkYlZ0YlZDOHRJYWg2NUx4dnBpZUxsdC03UURtTm93QlRsUkY3R3hiUHJLd2hUbDZWcXdnaGI4NEtUQnJOYjRHc19GNWF0T3RfSmtuX3YyMXhTM2pMSGhSVk5CUURadUNUVTdXNXJiTEZ6RTJvVVRCcTdlc203WV8xQ1JnYy1OWDBhVXk2Yi05a19SZkNfYzZBWW1HRkctazBaZXRYV3lHRjFPOENIZ2oyR0F4SEFibkkyQW9GajhpQUk0UnIzWW12N2g4aUJjTWlDQmhUTzdZdnIxRGJrZTE0NlpDRHJqUDBRS09EOXBzcFFOd3JTMjViM2NJWENiOWwwSmM4dWV5VkhGRG92TldzaHZiY0dna2FMT1czT05RWmtUeXdndFNXTHljcmdkdVVNZHNEZHVOWENOV1NBaTBmYjhST01lWlZSTUM1Q0N3c1JQcS1oeVQwcDRpb0E2dkRNbmc3blFRX3Y5Qi1tTGQ4WEhLdmh4MGhidHNUN1BEeDZ2am05ZW9SUlEzdTZYS0ZFTmZoZTduWEU0ZjBjWV95aGxnU1VEejZpYV9EQ3VpNlpDVmNBQVZpSVZINkh4bEVPdGowdWZqQlFiYXN4Ni1SdXZSWDZJV2xiNmFKRnFqc203V2FJZlQ1TndJTTkxX2xScWZlZWdOTWUzVHkzNWEzdTlnZ0dGYmdVRldUYlBNcG5zOHNxbC1XbWF3aWFBYThNaTFzdGYzYWhYOGUtaWFwamd2MUYyQWdwQlJTdkQyT3o0ZlEtUzYxTXFHV251SmVPQllQRHhxZk9Vc0dJZG54NkpKQzVvOG5NZEplaHM2SUdCcnVIYXhUMFY3TThSVkoxTWp3eDRtQVhRSzdkNUJHZDBsLWNRcUxVV3Q3OFB1ekxwSExiamNybUhsVERjUkdDZndXQ2MwT3Jscm1LMTNlWk94djRYaHBESWNFUFp4aEFHV0poZk51V2p5Yk1CWEQ0WUlNN1Qtc3lOOVI5dUJkVUxyWkN2WXNPMmY1dW5FLVY4di0ycEVCSnEtazdEcW9XUl92N3BvaXp6TkR3dzM2ZzJzcmhvMTJHWjdOXzdybkRRbUIxeWF0dFRXOEYzb1ZhejZZejhNVlVrWlpKeUxYN1lLbm5XeUNYREgzOUlLN0ZLdzBWaWFGVkwzZFBLTWQycV9FT04wQlQtaW9FeWhWVS1MUnBRaVd0cUdzcmkwRmhQdmVfSks0TWpmeDROSGRQZkYzYU4wWDZvc2sxSjVjYWQ2TWJOQ1IyTVZkQzQ4dUdvV2xBMkVILWpwQVJpX1VTZ1Z3dVZJaHFjelI0OGc1cjlpa18xRkxweFotMGFPQUVfMjRJV1huc1NjSmZ1UWtxY3hKeG9VNTF2TVRDTDc2eW5hVkN2dlNZcXlSWG5pWEh3emozSHRrWG9MRVlXMzB0V25tTjhBMFhPSk5XNmtnOXNMUWh1UmtZRjdsV1hMb0x3cml6d0dTdjdoUGNWeGZDa04xUk9QMldNVmp2aGJQQWhKQzgyYnFaYzlWMTluLWdyU0kzTEdCMXZjZzVKSXVwc1ZySmhMOTVnUUpHeTJ0WVFub3VJcmNuUFBaalNSbF9KRWNOcUd4ZG5aWHp3NE5kNm8zUWwzMXRoWE80MVlFTkJPMDJMUWZsQkQteG5fbE9nRjJHU1JPN3BabVlWVGdXVnhjdUplVkMzYWxCOXZiRDhtUVJWcVBOczRDNEt1dWpvbUUxVUxtSTg1Q1JuQWJ5b3NRdmlNdjJ0c0hmZzRySHdrbUcwWDRXdy1Wd0JBb0RvbHViSHd4YTZ6R3cxSmloZmJoQ3M3dWdEVl81MmRySVo2dDVOVWZ5QXhTUGZ0dzRMcHlxbWZuTHhiZ0llSHRVcUExQ1NiZ2plUXBxbkNMb2txWHpQQXpzaWNrd1pqaTJ6bUl2UlNOV1djREN5VndqSElFWktSRzZiRzV1S2FiV2dRbUcxT00yZnQ0OEFvMDJlclRrM19INEhyVVBkVWRhandlbjY3SGdwVm4wc09SX05aTXJIVTJUS3ZscnBlRGd4NGhib1E2YmtwM1Nnb1doaW5IVld1RWQ4OWYwcTBfck1hTUhqaFZqUm1fVmg5ajFac29FbTl5WVQ1bzV6TGdJTV9tYkNiTW5vcVIzd0FWOTRqLTg3WDRkN3pvbEpXVTduSG1DUFJEMEd4eTlVcVFJQVlfRzRXRFpUSnM4WGFydTNucy16aS11cUI2X1M3dVBUb0xpb2lkenNqWUQzVGNjMEFKWmhJODRRdl9wY2g4R093NnpQWmNkZ1lvZlBuVHBCaTNycko3Sk9XSkZKZGFGTklNNDdrdTBmdW0zaXdERXkxTlFROERTMFpYUzVXT3RBZ2VjNkEyVl9tWWJGMkdGSHRYZ2s1Yi1vZHJ3dXp6MTQ9)
        xcode: latest
        cocoapods: default
        flutter: stable
      triggering:
        events:
          - push
        branch_patterns:
          - pattern: 'master'
            include: true
            source: true
      scripts:
        - keychain initialize
        - |
          # set up provisioning profiles
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
          echo "Saved provisioning profile $PROFILE_PATH"
        - |
          # set up signing certificate
          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
        - xcode-project use-profiles
        - xcode-project build-ipa --project "helloworld.xcodeproj" --scheme "helloworld"
        - |
          apppath=$(find $HOME/Library/Developer/Xcode/DerivedData -name "*.app" | head -1)
          echo "app path: $apppath"
          dsympath=$(find $HOME/Library/Developer/Xcode/DerivedData -name "*.dSYM" | head -1)
          echo "dSYM path: $dsympath"
      artifacts:
        - build/ios/ipa/*.ipa
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
