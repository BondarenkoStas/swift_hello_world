workflows:
    ios-hello-world:
      name: ios_hello_world
      environment:
        vars:
          CM_CERTIFICATE: Encrypted(Z0FBQUFBQmZHYTZFWlgxMUtoNVZ3WDVLSnA4NDJfbjdLbGJwV3JsLWtHcmJzZ0s3Z2pyczlWTWswUFdLSE5Tc21BS1AtNG9nVlQxMFdVZDlDSllldHRmU2pYdFIzWWlLaXNKS25oUldaX1lwLWZYaHBxak85TWNwZ1hHUHVxQjE2UTlPN3dsNUExUnVLdzF2QXBuemFQNXVNdDZDSm1aZ3BXUko3MUI3cmt6TkJ1UnRGdnFKMnpJSjVTNkg4NkprSzRPVkJleC1QLTJ6TmRCYk02LTN5aERxbmZPTEY0RWExc2t1bHZFMklvMlR1ejRhY01oaG1QeExRZ1BwUHVldHotM25kdVd3WDltWGNEMDRNbGl4ZW9kYy1wZi14dGZLMUNxMzR0cjRSbUc5eGtPaVloenNzc1NGVUkyMFQyV0lUZGxjLTBVYjg0VzlDSEF6UjhqV0tHcUgxdVlPeGRrSEF5aWlqWmk1ZnEwYWdvQXQ5VFdCcDY2a0VwX0libzlLU28tR2pxY0twNENIOW10TnY2Nzd2cVVGbkR1dmp3WkRaRm1MN3NNcWw3ZmJpNS1kYnpHaUZqbWNiQjhISXBOcDh5bUhET3pHd1E5TkxjQ25qN2cyRkk1Z1J3SDhEYzBmNUgzOUdwMmVBZFZ4NGRfTi05SjBQSWxKdEQtSk4xYktlcXo5VkR0X2hDd0l4NHZlUzJUdW9zNG1DYlVLUThkVTV4ckhUMUpGdDNuUU9mR3pzZ21hdG8wX2g5RW5WVHZFMmhKbDNTazBobGZRMl9EdjRGZTF6dE12dUlzZDhQWEdONjJFM2V5Qml2R2ZqbzJtNkRKdDhXT1JGLXRPZWJ6TFF3dkQyNS1iS01xX1pEM1Q4UnFqaHNMNFFZclFvdFBPUzBRazJNcGhZNm5Yb295M08xZGZrUTYxajdTZkYta3NMeEJmang1RHhJWmpHUU8xbmstSTJYNkp5R3FKTDNjUWlfOWRSb0licGQyYTIwaTJMRlNrVVBGYktoN0VzSk44WHpQQmg3aERyMlBsYWQyOENSWDhVZXRnOF9HMld6b2VQeWdwWGExYXJpY2F0cFZQajdTNTBKTDlrZ1YzN3h6b2pCeEZrcmNRTDZwWUMxaTJKaDZGTGM1RElWeUVjRWljaXJTb09rMlYtay1VYjQ5d3RRZXdqbFFEakVoUExLTE1RWUU0Z2JTN2ExUjVldldoRmxhVWxPUFd5Nk1uRDJqVzliRlc0N0FNZkVLc21jdUg3M3lwN3JONnlPRG9QUVR5ZEYzMFVGeVpONzJ4bXZIVU04VFRhVU0zZTJaT3Q5aGUySzZyZVVvSjF1QTZ4djBYY3F5MV8wWDhWal9jMWRUM1B2U1JycHFNTzBUeHYwRjBCVHRDS1BBaEs4TkdVa1ppUWhWTlNtenRlTnJRaFcwUzI5QVBWU2xRUG1aS2hZODFIbzJhVWhNZVVQenl1bUZPWWlCeVdzN0dtMEpNaUF5Wmp1XzhFMDNUUkhwaTJKb3RYUjVfSk1EbjJleE4xUW9zZUpSS29vWm9hNFVKcDlXYm1RMEhQckU1Q2VTUmI1TWM0dVUxVjluaDlPQnRFbHNjVVdzQUxSdTNqUXp4WmZ0ZXdabzItRW93dGZWdUVwRDdXNTlPQVJZU1ZCZWlEMnY0WGt3aHlJX0JCazlQWFZaT1Y1VEpKdklxOHI5T1Q4aDNWeTBEMXppcmh5bmpoTExEcU45clJtek1GTmlnOGtBbF9oY1F4azU2YXE4UFQtTV9Nd1hUbng2SzJJNjdyNHRDa3h0SklBYVBWN3BiYnFFTUU2OFFpNkhEbGxIdFUxMV91LWkycUlETnFFUG9jUng2ODhLNncyb1UtUzd3dzJoMnZteVpLaUFSbFl5WjBrVER4Ty05SjRHYm04dW1VNWY0TWlGTUVaVHRpMk5CMlhGQWd4cWpYS0xtWW82QnVTVXc2UEJUazlGS0FJVkNEeGI4dG5oUjMwUDN0SXRRVENYMHNsZ0xPUTg3WFVQMllqdjkxOXJHamg1RWg3dkdBOHRrSldzRlFrYXdhR0pyVGdVdkhkRS14ZUVxZ2xiaWpvbkdzR3J6blJ3aWstY3IzeUYydGpZVG1ZZnFxelFmUmt4ZFl1Y3ZHelBoT3Z0R2pkT0d4MWoyTzRCVzRHYm12TTdoajBGZXNmY3NjN3lEXzhyX29mTXB6UTcxWWtGVE5NOEdFcG44NnFTMlVQSV9xUTR5b3kyaGQ0V1RTcENhdW41RkFEcElQSGVTVXRvNk43cGZ0SFhJTFV2OEdqZTZaVzc1MDNPLXIzZGJCRzhYOHBCRzdZTlVxOFc5cEVWeklFcGZVNWJBU1k2X3FnOWw0VmlWdm9YYmdIQjhQdkhIdU41eS1ta2VtU2NldzVXVFVSYmVoMWIzbGdNTUNQbHZ2SGF1Njh0UU5lY0xXNDZsYnpGdHIzOEtpLVJBUnBfWTY5M0UwQndTYnpnNnd5UEN4QU4yUnVua2p3ZTVvMnhRZzdhRjZtdmhaVF90V3BUeC1rOV9TdnZHYnRBNjQzZS05NlNEek5oNDE1UW9aN0xPd3BVdmtOWTNrRnZzOGQ3Qml5Y3hCUnZ1TUNRcGJEVTB6R1p2ZFprOFAzLTBDUHZPVXpiT3Y4cjZxOEs2MWNla2NnT1NueG1mUzZxX19STDFlRGtlaklRc1Fhenhjek1sWUU3TWRWTDUwSTAzakt6RjM2SGdYQ29OcXhuTF9jajNLMVpyRWFEbDZmeWhXTEhlRXFNYWFTZ2hzZDVQSFVTQW5ZclNQSGdMTlVVU3lZMUNLalBGb0kxekhzV1d5cW9TR1dJQURqY1VQU3ZhSVpUblpESTlSczlfZGRvNmdiRWI3VVFnX3BFUG1QT05SM0hFTjViN2I4cmhxOUhiNlZUM0U4RjV3eFBTQ1c5WklCVTNBQUljQnltdXBQUUdlekhPb3ZlUGR4MlQwdmxVOUhZd3g0Y1RqREFLMW9qcldGVm9kdm5HZVdlVUF3elZZZEVPSW8wcElrUUNjcUM2cDRVdWI3Z2NHYk1CdDZnY3cwWFdZOERfMkw0ZWs5Nkk4WjFuQzU0ZGVQMEg1cldRVVNBZGRTOHF3LUVoQklQYXNsNVZrRXk1LWNJU05fdjluVFRNTzhJZEFCSXRZdmdQb3NMWUZQT2U0RWNHS3lUYTJaTjVqZXpXM3I5YlNmSzhBTGJpOU92ZUtfQ3Z2ckJlWW5UNTJSUW9DMG8waEt5dmpnWFlnMElac0VhNXJTSkp6ZEI5NjRTdVFxUnVaY3h5SjFUU3pzMEZUU2wya1F4anhBOXZaTlpwZ20xMldyRE1acWMzVVBDLVphblRYNlcyOXJRT0dhbmtPSkZGa3FjZ3ZsWmNObjVjbnBOSUlhaG1QTFQyMVdsSWlaaWZYblI4TDFxQ3ktTmRndlJxU0dMYktoRTlXalVFcmlvbzhTWVBlTFZDME9IanY2M3YzTGNtZ18zU3pjWHM0WnhzemF0S09hLS0xV0xpRFIzUjBCaDRIc25US2hfQnA4T29lbktrS0pRazdxZmo2VU41Qkl6ZU0wc2VFMm5aODlrQV84UVVlMDBlaU1GcS13RUVUMWI5NUNqMlpfYXAtcHhZb2lNZ0xUSmlJd0JRekJVMHh1S2dIQ3puOTlVV1JCOTZrdG51dDN5MlJPelpJUWxyVFgzZjV4c1B5NzNDQWtidzRQdE9GM2JLd2tqTGtvcVYyZnVyNENXamhiSVdUaDh5NHlxYlpiNEttRUJKLXFLd3dqY2ZOckFOQnBNZmg0OUF5R0xVWGNFcDZnZ213akNjTldqRVZhRW9pdWQyeURJUElWYlFHVWdHc0VBTTB2Qm53eTU4aUU4a2RCQkZoMUN3LS01VVFHNGJ4S0kxSjdvcEwzcTZqQmFuMVRBaE5qVzczWnA4NWZYY29pYk1XVk5rc3FkSFBnSk1CMm1ZR0VtNW5BSDhHX0RYMWVIQ095cDVYVUdKTF9XdlUyR2tZMl9IQWhFMW45cWxkMWRtM3NBN3VhWEZ2RXcyZVhuZUwxZ1gtNTV1V1FVMzZ4RTAwMEhSRkJHZXQyX3lQa3BfYlNrMUpkNnB2Y1NsX0g5dkIyTTB5WU13VVdfaTBISDlmcmlvMFhpYVlWbmNXdDVjbENqai02eWJmVVZXaTUtVFlQQ3JRQmlGTFJobUtwbVZNeWtxaUlHeFJSck41dVVOb2FMRmg5ak5xWWp1MmVrajRJU1RIeTBwYi1XVWJHN3R6a3p2QzVZTF90MEZ1OWJsTTZJdTRUMGtoblphemw2eFprOWpXcVBZZnBRSjhzYkF3dHVCLTlFX0dmZmRSZjZrc2RUUTJyaWNzcjVOUHJ2SGx6aHF5bWRXdV9ubXI5NzVSMVFJLU5mc3Z1M3NBSzBid04zYk82cmNYNkcwNVU4WXZWRUdlbHpLSWpWUlppTGllc2lEMFdDeWNzcnNmTDhONUstV28wZDgzUlFrT1NQT25fY2RjT0dNUjRIaUlzWkY4SzF5MXhJVS02cmV6NndKUjNRNVlPcS1WYUxqQWoyWk9BaVdkbnUybkZRdE1HcXVLZkN0d3J0eU5HbldpdGdLSV9WTERUeFg4WU0waXZRUE9hYnpUNVA5b3JmVjltOHI5WEw2b3J5NWEwVklvMnNXMHc0UXVnOElHaGo0bWdtdnJUZkpEMHplcTUyUTI5b24yb2VzUWxCTlhSTlVFckVWUzFrWjVfODFKVVRVOEhZLU5nWG1ESmFDQVdSRHl0eW5ZampCZjhOT2xOaTBBelU2T1ZoekNIVDF2V3ZjYjJ3VzVZTU4tRWxxTDU3NnFiSVcwLUV6WFJSUndXdHdtUzNYbEk3OFNaNTd3T1JLcHdNVjIwbU9NeVROOXNfTDVFdlNVSTg3Rm04MVZQd2oySkRhSlV2cHExV1JtSnJSZDZlUDVQS1lwREJSVURkSUU5M3E1OTVLZHk2aWdRdEFWOXo3VXNBSGU4YkNMeDhTS2pmQU5oUmJkVkJiVUdBV25JU29zWWZuZ1pzUWN6X3Nsb2JkTzBBLVEzYUNMTDNUYnFlWkMxbVJ6QVE2ZmRYV1ktNTg0aHlmbUNVYVFza1UzdUR6NWUtNUUweE5OeXN3WXdhRnlqN2EtRzJXOGczelpMVUdjS3BjbWFkd3VSYVBQVzZ5UThNa3NvS0tPeU9ReGc2UGk5d3NQelJTMFBNdzlENWRWOXg5d3VON0JCZnZFNTk3YTFxekVpOVFaUG9zVGNwcWdJbVllWXE1eTVjNkxBNHh0dmc1OVZnM3lZM2c0aDdOaWQ4LW5wNV95S3NIUmREQWVDZXRNMGJ6ZlJWYjE2ZjVad2FPYXNiME1NLTF0Y0tEXzdwQWtNS3hHU1dRZUkyb2VOb2N4TWtkM2VsM1lOMDhoVjBSWWhqV1BWQ2NGVXRXbXZidzlMVWQ1a0RhelkzNUxUVlQtY21MRnliSmVGRkl4SXBGdmJnVjNFTm84ZXFMNF9fakw0SEoxblp5MzNYSVdjV2F5TnRFWFc3eGN2ZWNHZEQxLWZjaVNOdXpVMEgwX2g4NUNzajZIVWlMUVVnZ2REQ2t1WnE4ZFdELVhUU19kcUhmZ3M4ZjY5eFJCX19IMUpaallZNS1TcVRxS19XOXVjNzlZdk5rLUtPaWk1SzV3QW9sSFQ5bnhQQnFzb2JHU0QwalFIVjFnUG9jYzFUMmtjV3FEbnNicVAybWFpZV9KZ3J3czdBWThqRVVoQjl3ZXB4NmNYVi0xQTNDSG5WYm9IeXlkcGN5Y3FrT2JSN3BNemwyOHc1Tms5MjA4VGVqOVJkeW11bEhoQ2J3NzEtRnZERWhoNnRyLVphZnFzSlhxbl9yamRVbGdPSU55VTV0QU1CTU81NHRMTUVrNUlpQldHdG9RcGxoWl94NFhjWFJ0VHdpY01ROVVrSVczYUg3VFNwdmkxZkFNeVdCaDV6LWFXWmNKdXFaSHZFaW5vOTVpUFRaU1l3M2p0eGI0amE1M2lpV3p6eW5vTWx2MjdZcHpYczktNzVLTmRqcGczLWIwcVlnUDhIZFRORmtmTExDcV9pMTVmRC1qZG1DLVhQTEw1OEEyaVJralU3VHVpbm5KVnQ5Rk1BRVdLY3BKZlYtT0pGUHFEaV95bmNhTElqRUNtUkRLNk41WjRheUdjaldtQk9nRkJSZmN4LUhKYkJ2MEJ5R01felJXV2ktZnVoVmk4YzFuRFZTRnItM3V5elRMbVMwbkFFWGE2XzRjZVNDVUhQU3BGTDFSMzVRTVpwVHVrMS15Y2J5dkJwWjVGRlM5dXJvRmtMQlJhUFE5R3A5TnNsNUMwMzdRVUJPd2VYR1ZiQlFVSmNUUXUyTVBBWVNMR2ZGZ3hWWFJPNGw4QW9aUE1oWkdvaFRHRFF2aDRIcVo1LVBheVc3TUFfN3ZXNDFDLS1zOE9mbXhQVG54M2FrYi0yelRZVkVCejluWm81di1ERndBcnlQdjFRT2JKX0RVX09OUDJBZklOaWh6TEVMV1dlT3hxdm9fZUxnaHE0QURWcmRDbzZfOE0xaTVvbkx2SzhRbkdsT2thT0dCY1IxbHo1NUZnSlZIZzlVeGhSVkpkZzF6V090aVRGR2h4cWpBNWpETUQtdHdXMGR4cVdodjBEM0c2MU5NaHNYeEM0Y3d3dnMwQ3FFLWhtSXVwNVJNQ1dVZzNsZnVHb2puZm5uSkIyUWp2anRCU2pqRVpmeWRMQVZwZjNEYkoya1lXdURndVpSY0ZfYnZ5M1NqM3JoZ29pY3ptbjB2cERHYnJ5U0tLX0RLODRGbnhwaUl3eFhJV3pheEgwbGd6ZDd4N2kzaFExRWpjX3NzZjB5SEQ0OVVUZnNkVmFxSHpUODk2cG5sLTE5NFV4NmtQX1NndVVaTGtYN1BrQm1WSy1nN09UUldpVVF0aVVYS2VEZy1zWDlYcVpxNVowVWNDOE8tRWR2aXlyOWhqMVVabnhacDN2V0h0anJQUFFneW9BeE5ka2UzakNsQ2lBUkd3cHVZOTJJYVl0WHQxYlkya2w4YzRpTy1Bd0ZoX0h0NVZFOTZ0OEYxVzczZVd1V0tKem9CT3NKQnJ4QTBfZGs0RXRYTkFFQlFtZjl3Tzk0cXBFMWdjQy1qWUFlVWktRzRlbmI5dlZPVjBheml6eHI3S2hMMnhVSVYtYkc4MnhSek5ULVFUaHFWRXlPWmE2WkZiUjZRWEtFQ1lIYktJYlJOWEdQM3lockpzVEhDT2x6bFpNdWc5bTdISXp2OEJKUXZQM3lyTXhwSzcxYm56Mkl6ZU9kU2x5bmRUZUNjeEhNOENodDh2b1c4MlZtNkdlVFgyWWpVN2xleTJjZWdGb29kWFU2RjhiRlg3Zjh0NVZDNy1YMWpxM0NRZ05VOEwwOHhYMFJCV2J5QzNVTVY2aUhXX2JqelFfRlZnMWhISm81RndDVnhlVTcwbnpzX2JqdjdzejlpQnBTX09UWm93c21ocFBlTGhEU2F5c09taEJFdHhNUUJQSjVpbmpuUEdMYkhwZTlGQkx0RHlOcWVGTjJxTFl3d2dwaXR5UWNveVpLVVhZdU5SdWdHdlMyTENLbkRScVQ5SmxFN0FCZUtYS3VEZHlTN3RYR0dJd3Bsajl3aHJubkRMa3pWcGVIZ0lBRkp1VmhwYXd5UXRGUC1pSUk0M1BPZkJfYXljeFpxb3FpY1JNVlY1Z1Z5Y0I5Vm83MGs1U00xOTMwZDRHQWdPTT0=)
          CM_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmZHYTZXS281UFFfcXZsdmtjTnhwdENiOU9mLW8tUVZkQkxXekZmcjdtMTU1U194eTFVdXFHTDlmWHBMdEU0dmw3Z3JtcC1lRERWaUhCbTIwZko2a3VSdVBCYnc9PQ==)
          CM_PROVISIONING_PROFILE: Encrypted(Z0FBQUFBQmZHYTZrRDVyQVZjWkw1bXlaQno3dHZzR2dFcnVSMXFSb3BJS3BqeHI4aUVNU2hBc3Jrb1I0VFBJZlZZSGFVMko0UjllMTlwdjhValBJbFdrRXBTMlVvYWRuM1EyeEZKNE5GeGh2V0FBTGpyNGNSWVVmM0pVVHRvdXpJaWJGekxoa1A0dG9YQndWLTVpbS14ZDVmQTA2RkpwRTh3QkpWZFBHVGR4VGN4OEtsT0VDVllyb0ZlS05kRTByTkIxLU83SjFyaEt4VmNkR1ZpZ2I5SXltaGpHY2t4WWt6Y3ZnTWlib0VUZzVZMmxhSzNGeVhzTHZyM0daYmdtekk0ZWR4Tl95V2dQWnd1VmZnVG84UVZaaDBkU2p4Vm9VTUtzbTlyU2N0a28xY3NYTTJyUFlzWFRNMmdoaklnQ1RybUQtY1BONjF6MGxkcUkxOUlXblYwekpFM1B5S1VCUEs2emZSVUhlVVMzRWV6SXVTLVUxc2FpWXY5SDUzUmdRN3RON2R4QjJlb2l5bE9pQ205eXljaGJ5X2tpaHR5dUZPVkxKTzY3dFBIa2RUVTcyb1lhdnkxYzc4WHZVWjFFOU1xRFVESlAycnRUa2FPWVE5R1FjcUM0TXVIUkx6R29kNUVuVnJpNmVvWVRNRERDdDZwRUswNVYzdWRVN05TMFBpWjY1akhqT2FCcV94aVBSQ3diX1dFWmJYVUFHcVhMYnVmeDB1LVdIZ3FWb0ZJWDR3Sk11cHpMcmxNTWxGQjBhZ0JDWXNkVGo2TkZ6aTlyM0JaYXJ0TDVsWHZ2UEF5Z0x5eHdnNmU3eTRncEJjcmViNHJJOVFsZnRiUTgwbU4xS1d4YnN1UzhIcHRmTlp2ZE5pT0VnTFFVTjl3X0w3SDU5YVUtRV9MdGxzTnpieVNwMWJjLXIyV2cxMGR5MFhKMjlKZ2NwVGRvVnBHdmZTMzVidnl3b0pOaHBXNUFMU3daNWFpSFpodVNzREloVENUVXZqRl9HbzFxSVN4UzBwYUlsbmM3YUhoYXNodWU2cW9HOWp5Mmc5aE11RzMxUHpFQm5janYxTS1TRmV6ZTA3OXU5RnVybWNDV0N4QW9KWEN1YWdnNVUzNTh2anlfc2k5U0NNT3NpcFZmaWZuY2JTSXd2VTJPa1NTQjhYcjhBUlpkNEY1akJjZUNXNlNjWkE5TlBlZ21aUXRoSzRwQk85M3g4TGx2MVgzNER2S3VsUDNlaTdfUGhNYnMxcDVqTXM4UFJjTUhDZnI3VHB1eU8zOU8waGlSMW5MUVBfUlYyUHlpd3hVRHdabEY2OTVYbTZMY3JlM3hzUEZSdEd0d0dTcmdRdkFKYWx5aXNsSkFsV3gwVW45ZVQ0U244RjAtdFVaLUNHOHU5WXY3WXlnc2R1ejZEWjFkOGtrZmFSNElpejB2eE1LcUR0d0xsTzM3R0s4dTJRQUhUUFoydmI3TnAxVUlSRU5jdzVPNzI5WElqUTZVMkFIYVJ1MzU1UUhfLWtNa2JWZTJXMWpZQjRob1REN0tTOXZRejBndWx5aEtQM1pTX0g2bExqNlBaOUthMWtJWUZIQXZ5bkJnaWk0MWotY2tYanNmM1FiSFhsX2RoLUVZSmVVZFFORnRueF82bmhxdks5d0t3Tm4za1N4anBnWjFxanF5SFN6ZW9PYnNqU0d2Q0Zwejh0Nk9MSjlKSWhEVTVPeFlYU3NNaUxQWTFabENKT0NreXg0NExvTHVyZks0SmtiZ0Zfb1F1S1VyVVo1RzQ3QWNFVzVmaFlrVS1SWEREdDFYMzhHVGhsUzh2alV0WGZtbXJwWTVfS0xYLWdiR3pta1lHZGNnQ1pPS1NTVENKcE93XzBxbXVVUUF6OUpGMkZGZ0JjU01OdTdGRDNKckVtZy1FVEZIQnhEYjN5NWdIbmlkLXhyaVBFYlNRODZiUXBIMWZIMGFDTjBEd29tTGxndFNTcmJybS1aa1VudUFfbEVaMlg2TjB0X3BYa1dmVERsbHpoY1MzV0RpbTF2anRZcl9MbGZvdFZSX2IwNl9hOWtJTDRnMU9RM0xKMDc4QmFTRl94NExMZk5kanNaemxLcmpISjNTNjRYWEpFbW9kSVd4RDFoU29ickIzblBBVXFzSkxwY3U4bDVyWUVYMDZEcnFBSU1UWjFUS202RWk0NS05blZQRjZ5blduOFZNcXlaaUxkOVJ0VUhqUHczS3pybFBIY0hTOTJUNnZiWmsxbU45VFNtNVNsV05ockozNHB1bzVISnEtSXFSSGpDbnlsWHFfTEFieGdvLWYtcGtVRkhqV0NCOEo2LUR6YXh2OWIzbDFBNGRZZHpPMHVzckY1RUNoRTY2am54cFhsMmNIdkNZMEZUdUFYUE5ta0hrUUtHUGgxb2ViVHRlUDM4WURQYURYaW9sbnBzX29NZUwxNXV0MEZhdnRKWXR1d3hDRnBIdE9lalJ5QlhqbEdRZ0gtR2FTV2JFLU5ULUFKM0RRcXNpX0xGNGkzYmRiaVg0ZGI5eW1Pb2RudjZpZUdJdHJnN1VtVWlrRU45MlB6Y1R4UzgwN0pOZjlFeFlwcjl1ckdvXzROUEdra2o4WGxCaVljM3pMWkt1VXN6REJ3OXp1NDBXRDR0Z1NOT0xUWVpERnJXcDlMMldLVGxiV1E2emgzYllGRnBtZVVXdEVTMjgxUlRYSGlrWHU1S01JaUZ4Y2NMcUFOWnpqNkxiTXozczZLeW1jeFdJanlXWmp2UFRxbjh2VHlFeG5lUGN2cnhfbk5BRUU3MGVycVMwMWJQU3BkR2FIMkRxeXNZQW9QMDhFTzlrMUlrY0JuT09TckJjcGxqSW1jMGEwdzNnT3c2cnZ2NVlxenFEN29rV3RBYVREODgwbDRsWERCT2RNUzJDbC1oYlcwZ1EtR09uczJsRTZWaWFqa1NiRlpHZXFqN0FfSGFPZ28ySmdhQ2Rtc1hzOTRXR3VYSXoycjhwbHoyVldlX25xNlBRempTN1hvR2lJbEhYejN4Ql9BT1cxV2x5NzJwdHNTSENGbl9TVVI3OUp6c0J1YzY1U1o5REp2TmdlUGpLck9sVmgwMzdoNW82TzB2UHcyV3NRRFI4MFVTWVhEeUpDRmh2ODRkODhSN0ZmSkJFNTl4T0NYbnFmQkZHd0VWUHNKWWJ2TmxnUnZjS29hV25yd1BLWVFORV9RM2VSU3FUTWNfX2N0ajI2c2k0Z2dJbVg1UmZPaV9ZMjYzZ0lOR24tcmtvRWFvNFVmMEdpRGpubV9mMXFjUUNDZ2NYS3VXakxpemlMb2NLbGtUWXVFdXhGUnN6bi1nMGtNNGxIVGh3VmNJSGs2MW9wRDh3MTNnRWZ1TjVGOFo4QnVMWGVDWFZXcGxYeGVqRjZqUGZ2akItT2hMQUFrUGFWWVplTVpsY0pnQUtvX3JkUzNfcnN4T1dMYTJYRmJScXEtcncwei1IaWtuZTJiVXVPYWg2eUZMc3RfTEpHOF9weWstUlk0NVFfV3FoeHNrSTM1eTVKd0t0RGVrNXpkaENCTTZGdVRXOXlWeTgxTUY3d3lFa290cmNQNFE1TWVoWmxqWC0tVGZicGp1MS12VHZ1TXdCNnNrLTFCcWlFSXNpb1dMdDNHRGNOeFZmTjhWVjg1OEVfQzVvNzc0RTNENDFTZVZrR2tTWFFPSXZDYjhTcTBqMVZydWRrWi1NRVdDUDdkZ2piR0podkZrS0x0TEl5ODhYTk9teFVpYTZoMFEzUnRFcDR6T0hfUzdpejJhZDlhS0kwWlRRNlE1M0hmWkNrVXRSeGIxQzFpOWl2OUctVXNBTlhaZUhLbG5MUU5mZHIwNFZIZ3JJY0ZON3RBeEh0SzRVUlJ4Y0s0cjFoeUpYN2Z3SFVWSEliRzlxeGFPeGd2YkxwZUF1RzBnSEs4MkpJYXFrVXZ4Sy1CUV9VWUhsMlp3X2FaMGpydGtKaHBEb0p4bHNObk5GUndJYmQ1Mk05Y3JBN0xjMzlJRTdCYW9CczZmeWlTd1JFSzJ4QTZoLUhfdktHMEdxbmtGWVZuN3ZDSDFEX0RaNTMzbVlQTGdNeWprOThZVUtmeTBOZXJaY0g4dmsxcktQcXo5SHZNRGpvUFRGdHJqYlZJaFJ3ak5zZnpWRGFjbXlmaG8wUU5fR0szc1pvR1pYY3dXWm5CUnJqbDJpbzEtTk04eFRrRGhSRjJoWjRWRThCb09zdUpwbmR2UzdwWTNqVUZjQmp2b1ltUENoLTVfbmFYZ2FfdlNqVFpSNUtpeTVuY3pHNUZiTjdjY3VDN0VTdFBCZzJUQTVlSlBGM1cyN1UtUEFBNTVqSFdBZ2RxSFZPNWRva3l4VjdpZEZiVVdrWDJyTXNDSU1UcVJDRXNnQ1VFSmdiaW5kQW9ET3Jsbnk0czNaOFlIX3IzU2dmNDFWazV5RmtTT2J0TzBoQW52cDJWTDZ5Nmx5bFB4eDl2djBHY0ZORTJodEYzRGtFMXptTERNUkJhZmRqR0JnS2xWMFBBeVFwbHNzbzdOMHl0THV6ck5RbVAyTGsyQTFLRW9nOVU4UU1ZTy1aYmtPdnFHa3dpWHhVRU4wUUdPOE9tMDNnWXFOSXJUZVlKTUR0Y1RpbjNyRTlLdlpLdHVIU1l6VUVWNklubzNKODhvdFlvVy10UzE4V3l0NWFQY3c2RWc1T21adUhrN1dOQ2dHbXdZdk9haEdtM3pDcjFLQ0d4NWc4UDZKemtLMFQ3S2tGam0zTjhZUTB5Zk0yQ3pOSVkxRl9LQ2k3TllQWVc0NjJNTkZXS1BzaUJMcDUyaHlYSlFSZ01HMk1pUXVBN2JzV0pQZ2VzTzNNMVo5UDZHZ0l3UVhvY2otVFF6d2Vwc2tmV1FpeVcwTXFydENxMlFyNVJKWDM2ZmhIQnFuTGhoRWpHOG9TOWhDSWtJUkMyWTBSX0ItTm5RR0lrV2FtMEJJVjVROWVBYldEamlFYWNlamdfX3lkRS1Kc0RCZFYtX2RvcF90cjFaVy1VQnpQVnhxaWFMVTFuQjd0LUgzOE9NWXJ6S21pN0drVmNtcE9rRTZSbDMyQXdIdnZXNmhocjEyVmx5YnJDM2JDajJ1QXpNSndnblVIb3RkLVFWVHhMXzY1enh6MUQyRHJjNVJrRllfbjBMNGs5Y01leEx0eExuRDVQWU5JMTdPUWJ6WWd3NWlXR2NmUENRZG1ZcmUzdkZFMEllNi1ULWxLTWg1QlNZYlJyRVM0NzdFa25xNVpWSVRwZGtQckN1ZGNNa3hqdDlwNUJTVVRZc2liem5xSEJzaGJDRFlwd1Z4dk92Z25GdXBscmRqZ3NZbG1fZjRKcnR3cENtQzFwRktQeVdMRnM2bTdSZVVzLUc1N3ZXSEx6dk40eEFTR3hwVTY2Q0Jqc0hrRVk4QmhNMWdKVzhCUnoySkJYTHplZ0FTa1NJQnJUMTFycEdBcFFIbnVFdHkzZ2hmTkhHVTlrMmhwdGUzU0hIRE9udXgybTJUUk5yWkpBNVI2QUtob3ItTlRzTFV0TXRvblR4eGY3Y2FqSHN6bWROTFJxaENNLU0tOVE0ZTBWQ0xwY1piVHh1Y2RNWjdrYVJsdDc2aWRqYVVTSnI1b1JZYXRPQWNZTzdRbUtNem1pWjJVNk1xUW9ZOXZEa3lNWFVUQ2JuZE9RdlVLSlVxQ3BpOVB4LXZpQm51RWdpNVhMVTFZS0xuczU0VFZ4LWJyNWN5T3dVZ1hnTkwxc1dDRFJCZnhHZFFEODBHU2dlNlVEOEV5R2VKZG1vNS1SeF9yYVhmNE9UbGFpWlJ0OHlSZXFXRnc1SGgwSFR6TVZhaTJZaWtTSkhxcnA0VGpZa21NazFMU2lVRERWbTg5dkNMdlJFcGxvZ1RXYXNKbHZXdzVoMjJYdEg1ZmY2cXZVSG1hZHo0QXFLOVJRN0xyazA1c3NOaUV1R3RXeGIxbFNJRVVKaVpyY2NhSVlPMFVpMkJwMGxBcGlJQjZvYlJ2LUxFT1V5YXBlcV80QVd6SmtIV1NZcXcwbHFuYjRLYy1RclhXZUNMSi1mR2NfWm1vX19sNXR3VUl3UG0yQUcwbVZLWnI2aWxHSWNRakk2Y1Nwb09IZVhzenJmMWhONlZTeTZ2YlBGWWpicEJ3NlhTS2Y2Y1BKVmhQekpIZVl5S1VreUhoU0trSjlBR1F4alU0MDZuSmxrVXg4eThZRTFIUVlTMjBJRWwxekEzUnoyc1JMeG1tU2hROUFmc2ZwdXEteHZjb0txU1VOcS1NcGtLN3Zlb2lYcUY0Tk9WcnB2R0RhY0hmUDBFTmpSZTFvOTREQmhFMEJfTkRFdzRWT2tiRVJrVlVBbGc3djNDdnJrX3hDQks0QXNQdTVlM19wRy02NWJBSXNvVGtIaEpEcTY0NGNfWjcyOF9yN3pHSUw3LWgycS1wdkdLTGdzelRrbFpxWHV0V0Q4THBIY3JzdHlwNi00OEh0SUpaZDk4N1psc1VIbWxTc0VITjRzVnN3QlJ5YWUtb1RvNy10NkdqV0FhTjI0VXhzZmNKN0lpRTkxOHdJT25VU0hZMmVLRHRFVlU1ckpRYXYxS3R5eFJLazdrY1g5bkN0Wml4WnVfaHFjZE41UlRfSENoY1VnUWViYmNtc2RoVzRPZVdJWi05Tk1iRElVWXFmTi1rNGQ4NUlvMVg0aldvVktyRlZ6bXJESUh5NXVIUHhoeUVwRE8zODVaQzBxc1UzNlFQby1kNDVtajV6bUJPZDdHbENGSktoV0JpRFNHbUQ0OThTanlqbHRmSzBKWndXMWZUY2ZyN1JvdDV4Z1pKbTRhb0g1ZlBzRGRHQlhrb2s2RVhkcXlLWHlYVTRoWUNCVEY2T2pxWUNFQUZ4YTVVNjcyM3A3TzlmQVRZNUxpX1BzOC1PYzZDSWFYVE5idExnWEVzSndVemdkNnBuNnE3bkZCVEJVWWJlWkFJbmstYl9qUjVxc2dVR3hrdVl0XzF0QnA1TTVLVzQyb3c4ZDE2dlhFTWZUeWRvalZEWmpfNS03N2ZYd1R5UkxTUEZFbFpmejg0ZTh2Y2UwWXk5b3RWcFJpZEtBd0JrcG9kdEJrN3doSWk2QkEyckl1Y2FTdmdKcjl5SWI5QkpvcFYxd211dkYwYS11RmVzMURXaEE2ZGhKN3dzRDhSNXJpZWJmN01vQkNNVjItSjlXRlhWMXBxOHhIN1RVNUF4TGRCWmlMTHZKT3l0c1ZTLVZPMXl0VGRZUnpzOXhQSEFJdXo1MWw0ZVk0ejNMLW9KcVpIV3Q0SWJlTGVWNkNQVWJWeFJJcUhxcFF1UF9ZVkUwMldzUHZtVUFQY3l0ekdIdHlOWDFOamtUTmJMNlFrdHEwcUtZcVp5NTBmazBHQmgyU1kzUGVXS3lKWTk4YU5iQW9tTVg2emtCblQ4WnlnU3RKM294d1ppWkFKLUFfZ1JXczZqTDlUQUVrTmpIZlZza2tRT1NXQU1RamxXSmNIV0t1M09TZmxMNWtTU3kwTDBBY21jaTVVN2prVFlwbURZcDhEcFkzV3NIMUhYQkJmS0ZVUzhXLVptellaa0tEQkRLMjFmZGhGQzFQRVdsY1VOVzRNYjdmMlBacWRNVDM4ZjdQcnk2anhKMUtJOFdIZzUtcVFTX1FiUGQ1aTkxV2NuazI1MUlvSnBKdVV4LWhCaTVrRnhTUFlHS0VpVjI2UTY0SlNhMzA4MXg0WTZZZGEyVklaazZEX083cm42SFA4NUxDNWE3ckpHUGhCaWg5cGpNcG8tZkd2a1hGTTdBTXV4SVRxdVhVbnQ5YTBtWHVRVHZVaVBZbmJ4WjRFb1pTQ0k2anp6M0Y4QWJ1X0lHTGVpVmd1TU9tOU9TQWdmcDJ3MlRkcFlSM1JFLVlxQlg3SGpBMG1hNVU3VThNYkFaMDBkNlhldmgyMGJ5cEF4ZXV3RmJxMzBqOGowbWxkM1BXSTh1UlR1QUtQeVF0cFQ0azJnblRCb084aFI0UHJORmc4ZTJEVHpaTmNMdWNoNlB5UUVEaGJNYUpDQ0U3bXN2VmRnQTZMTDRDd0d5VGZBUlRMWlJ6dk5jMkhGMEpZYXJPeVNFVFhkT3pBMXJvUW9pMlRfWXNzblo1LWtHci1mN3RUdnFJVTBId1ZUOTgxUFJsemI3bG5zT2tYREdrS2NHQldTZklMejdoS0dHMWN4cTBCdWJSQmlYZ0RvVzZrS1ZSWVBickhSaWdNU2xVVGswblBWa3BWc1A2WmNGZVAtX3ZmamYzMmY4MWVSMS1aQUQ3c1M1aDFjM1YxcFNtb1luTUJiSXFwY0VraVVBRkw5MTRQOXpNS19ZTWl3cE1Xb1RRdUxBU2V3VmsyUVBKcm1fRWtWajczdFhRODR0ZWFiMFpuRUtXeUNieVJuSWVIX25BelVUcTZ0OFpvVTZVNG1OOTZKc01ia1JGdGwxNnRwT1Q2dGJLbFFManVSZDY5NG8tb3NSQzhucjFtQTlxQW1XZTg2Q2VLRW1GM2llMU42bkR5QUloVGVybS12cllHNHVlRUJQckFETjRSTlQyM29mZjJfaXJXVDU1bG1wak55d3VLSzNGOXpWSFlJb1Q1WlNKM1BsTmdsdDBQVUY5SFZseHV4VkxlWjBNTjJieUh2cWJmeXNrdXNueEdZNkFjcE4yYjlNY2RiN2dlOHB3akpLRW02U0pzLVl5aEFmTU9KTUV5MjJOcnNjenU2eVlzNFhnbmVqS2ExRXJtTm1zWExoYkRlaWg2enZjTG02U2NmQnRHNXVzV3VLS3NRLXZUaVlnMGJRanpzdnRHRDZuRGRpd1RGR0JSUnQyMmgwZmR3Q19yeHBtdkhGdENqVE9QbnhRRk5IdGJ1bmE2UkVLYUNsYjRSZHRjMVVFUW5aRUpVZmNFME9yOG9nVTcxVkE2REdIX2ZpblNkbFZudXNUYzlZMDd6ZTVTMlJRUUdnREhlVUY0aWUyTm5pUWxUcEI0dkljeUFDRk0taWppLURObW5YanFySm01WkktMW1nMG41M3Y0Q0h4b3JVT09Eb3FrOVF1MHVlaURieGlWLUVFR2VaNnFQTmZFaEgtenc4RERFSjdoM29GTk9Ubm5yaEdXMkJwWXhMTEljbVZnRHRWUkNialBkZ2JwYTdFZk55VEVpMzV1LXE2bklCVjRtS1hDUkJGOEFUQjZ2RXlNNTcxVl83NlFRUmVYVXVrSVViMlFSVEJFUE4zdnhteW14YWF5ZHZvaFpLd0dLUFlyLVM4LXd5SWJrcDFGR0VtYUFpNVBBODdTdGtyQUNwT2x6cU92UVNjMkZrckhDQ2hpZDNXQ1llTE5vVkNtV2dwcVI1SnBSeElwcXNvb3JCTUNESnVfeTRJc2tfV05nYWs5ZjBpeFlrRzJ3T0gzWDNZQXdzZ1NtQ2M4RVh3Uk1pVXQyOHZlcEtMQkw2YkpwdW0tcnZtRDBoRXlDZUxqVzBONE16YXdSbWNKbktTTWN4R21pNHEyWWxIdzNOMXFRN1JKOVhuQUE2TzNOODQtZ1lOSkZzRTVZcHMxSUJmMlpwY0dvVUVuR1JCQXFiNHF4UmlqT1kyU0NQTkpnNHZwSjU1MzlOcVN1Yk4tS0lrQW94Y1FQTGNQb1FTQUZCSDJucGUwT1hnRW5weEtwSE5aeWw2dUh2Qm1HY0t3a1Nfal9PUTVxYmd5bkdmSVFCS0ZGYU44UzRfNjUzUzNsblByaWhNZDZyZFFDcGlXSXJMejY3YVRpemJjWHpiVVpCUmVPakxubTdKM29adTlXVUZHbGJtT2JjVUt4Y1k1Mk1kWENnbFExN3ZNVFhvcDV5SjdaWmM2alNjQ3o4QXNsdjNwMnoyeVNYNmlYZ2I5SXhybGQ5enpyWHl3Tm1ITW42SUp6Q3lqMDJEMnNRMEVxaWRSMTlsZmU3OWtWQnR1b2lGTUNoUkdndlVkc21PTm0xWTZWQ0w2QjRVWUcwUldfVVM0M1N2Smc0WVdXU0hBd2d3cEgwcjhHYi1tek0tMTNjVkNiTEozejhoUXBVclVCNmd1aUtXbWZnSDNvSnMyMTROQWdTWVB3NXhTcExIWDh2MEtfbkkyOU9QeUQ1Zi1ad3kzc05XQnBmTnNRSHFzSGl1NGctXzlGakJSY2ZfZ0xFZkpNbnhVZjd4VG5VMXZiUlFGMXFqSWlDcmVYYkt4dEt2aFpMeDU3QlUxa0RZLW4zOWZLRFcyMXBIZGNRU2hRMEd1NV80MjZqNUdCNGNUVHpILS1xLUdjeDRIbFBaSUt6aUlmT0RrQjRjNHFhaWdTZzY0d21WYS1FMUh4SUltaXY1QVprczh4QzFBN2ZpT1BkVVh3Z09aRmhGVEJ2NVROR3JaOHFWVWM3dW1RTXRfTE5LMXhHX1BsWGhmMmtSUUMtbkhMMjN1WFlHREdhQlhjajkzLXJfd0swODF6V205M3JuWVJqdGVTQmpVSlFaaEJIWmxXeDZRekhyNjVTSlduWkFLUkRnTjFMVEZmNEJ1X3lUbk5iUnJqVWNnNmJZZ2J5TzBlTzZVZnN5YjhYY09LdlpSVHNTNmt6YmMxMnJwaTZvX3AxSTR0UTdaUlU3WGtjaE5KX0UxTE1YX1h3S3lsY2ZxZ2szY0wwOWQ5ZXU2QnlndU1Jb2dyX1VVZVdYZTBqNFNFenczdEtkMnFJQl9tbGFQRGRZc09DRU8xa0VQUW5yZDZtdmtiM3Y5Y3c4TEdGbFVIMU1uUURjOXExZ1gxdTRmUEJjejhSUVk0SnhtMEhqbm9BMldLUE9jVkxBOGtIRGE5a04yQ3pTbVlNQU1iMDF6cHh1M3VQYU14c2RBd2xLNmpSb3hLelQxRFBmVU1oN1ZyLTBuU2t2MGoxWUNTUnlzcnBCSnl2eEhSSjBkWjdPUnVzM2M0YzZTYmhyczVRMVMyU3prdWlNeEU5RkJ0QXVWbjRxMG5hZDVpSHFIY09TRnNjRnBub1ZrWUdocDFkZWp4UkNEZEt4X1E0QnBpS21PVl9sMHBSNGMwR3Yta2xNbHNpam1sT0FWekRZVV92d3VGZ3BVVEx3S0ppdGtaOFludHlPUDRKWThrWjRXOUxHVHp0T1dEVVd4SGZweW1SSWhoWXlSSFNtTDdETWkwZWt0bl9XNURNXzVGalJZaEFWUVdPSFRHVk1xN2pmM1JtcjhRWHpLUGU5WWtYbndLNC1rWkhiYl9iRnN1X1k5YmVibHkweWxGMUdMNU12OUYyemUzS0tqUHM4ZHBpeWRGZ2J6N1k5UjZObUk5bnF2MGlSZFNQbmZLekRRZDFTYkR3azdPNk5hbjZTNXBseEotRjJCR19NQUo3MWFaaTNsMllwVUV0SnZqanU1b1MybnN6X0F0NW5YWjZoRG5oaURPcWsyMkR3M0J6cC1tZEZ0NjVGalpGLUdyVXctYWlMbUd0VTFva2JJVmg2UHlFSFdPalBPdkh2c1lMLWhWVXNkWnRSUTg5UjVXZkpveEN1UktHbXp1YmdhelJLUlRMb2o4REtWaXpydkpSNjUxMXBjSkZXSC1XNzRPMzltRFg5eHJnajNaeUNaVUt3TjN6T2gyYlFhYjZCSWhoR1dkX244ZE5ZMEl4c1JpbG1JUGxNUXhvOFRvSFBCdGlIXzVJNlotN09pYXBjV01vRm9HSDB4MnhlWm51ZVVwU28wcFZtWmdjNWcxQzlObjhTQ2hlNzVtOENESmdJSzNfbG56Q0Y1SEg5ak9NakFMU19LY2VoM2NnYWdFdHhBaTU3TWY2Q0llY1pMelAtZ2h1TEt0ZDVnMnp6WGhjYTU3MGxOQlA0dmt3a3d4T3dqMUlDcG9kcWtaeDVCNzJ3SzBJQTZycFpfb2ZmclBKZGFyWjVUTlpwdU13alJMOUYxMnlNbHVDYURmYWZuWWVHRzNlQ3h1cGRVMzQyd3lzR0tUSE1rVzRldTJsbDE5V1VSWjVzZFJZX2lzQzhYM3hJS1lZV2ctODhQMnUzZC1TVjZkeE9PNzViSk1NZWxWbnB4aktjOFd6UHpzR1JjbTRPajc2eDUzM25PcjgyeGgzRlNUaHpGZGE1WGk4RWlHQUNRNTZGalI0X1ZxRGNGcUlKOWFoMmp3T1FPVVNrdms0Z1VReHFFb1FDREZLT0RUc0o1dWxBU2M3SDNsYWdqMDdWTnF5Nl9jbksyMXBaVVROMkxndFNLUHI0eTZqcGZYREVyRkNwUHkxLWJpdkxXajFja2Y0bDNud1JmVGxtZlMtSDJjUVY1Z0k5X3RRSVNGYTA5X0VWdUVxU215MUxPVk5uZkdBR2dkU1ZVbFBOQVZjS1BGcmxZUnh4b0dxdnNpS2ZzVy1KUXdQTzVHOFdXSG8tUElUdTVMOGphd2ZrUGQ0T2ZVdTV3eVlVSFZYWXNTdENGb3ctTFNnYVcxd3Jxb0hTanBJZ2lKOFpqd0tVVWFUQkpWVHFCM09zU3BtLWhoaW1YNkJGMnowU2lVTFA2RnJnSGFvV0xmTW1NYjdBX0hHNDJLQ0pneDFCaWVNZUpnS2ZsWVFsSDdxZFRBQW56eWxIUzAtZjBiMFRNVGR0ZHNMbUU3YkxKSjZjWHA2RFVJXzBZdl9sbjc2LUFzcG1MdXNQNTkxQmdUdGUxOUZBUVZIN3FRVmRZZklTOVo2LTRMWEtTaVdwUFFwNU1yMXBOMFZXOG5DaE5KbnBHWmFMUTRxQUh6Nm80bUkzaHJKeXV1WGVMUXY4WElUR2FJWUJPUnVwUVBRajFsSlVrODd3X0pzUklDRms2cU5XcnVmYW1EdlJ2SDlYLXlGaEo3aGc3S3FPMFVwNXB2eVlJRTdsTDRtbzFFcC1IbGlWb0xJWFRTbWJKSDZRZC1Qd0NLUWxQaGRRNGI1TEE0OTg5dkt6SXJqMEd4cHM1RGFqT29OQ242TzJONTR3bklWT2lHcENkRVlCNXo4LU1wODN6S0xzOGRVNTlqX0gxRVFpUGRTeHpyX2I5UmFOZ2dRdzhDZkE3ZUtDX2JMTXlhclZqaUVsSkNGWWN5NHQ2bXdIeThZVTU1dG9zWVNwbFZNNTcydkRZQWptZ2hJX1dfMHBfZWEzcDRjd1pSOFhjeDlzRGg2UDVtcTA0aU1QNmE0YUtBMEpOcXZBQjdvc1FkX2wxM1FRVzlTckF5ZUxVZkI0XzNKTjAwczVrQlROVHJWcjJFMzQzeENuN0tQTm9pcE45bnk3aWlWb05uaUxSdGJZYm9HTzMwWERtSHB1VTNMbGFVRngwMWRWQkl5TnBhbElBOXNzTnpOR2lYRkJEanBmaHFYZXF1a252dWZxbFhYSS1YM2hVZV90LTdhcjlhenpSTGRFajZ3Njh2MVYzVTQ5NXAzcXQ2RTlvOWZuV0txai16dTg5MUdCZXd4S2g0Zl9sUjJnMnA3T3lRUV9BT2l4MFY1VlptTEt6OEh0c3A4X1JNa201NWw3Z2pXbzRKaG92RkdEaXltTTFhelJzWTk2NHltOGVvZ1UtNGxrSTdkeGpIX3dBU3EzdHVZZF9GeUlCT1BPaVRubmdNVUtSb3cyb2laSXUzVEcxcDZFU202OXMyTzJGMkVXVmlIdGpmZVhVU2NhWXV6UmJlODRGbF94S0RtcnNNbXp3S2JDcHQxazh4anI3S2pTakZwXzhUV1pRZnBuVkpMcC1qMzl2cy1ta2Rpcm1mX1FjWm9HQmk5RG9KYkFWS3JFZTcxYWVHbTJ3WGYzUWVLTG4wYS1kVjFKQ2RNcHdZa0N3RFA2SEhpZFhKa0NxT3ZXaDBObUJ2UmNQZG1MUlZQLTR6UWlEZ21mRDZpeXFEa0dySlVjUTNoTC1CcnB4T0ctU0N3dTkydUtiRHBfaEJabDBKdEpJdlctRDVIbDJlQjY1M1c5Q1c1SlF2bGcwQVlfbGplckV6ZXhyVmwyeDQ3MW5Ec3ZyV2FGbGtnaWZZbW9QVmtON0VfUk4yZ2RFbFhaeDlyU1F1WU5pSFdBRGZ5UC1lbHFiQmRzMUxMOXFyLXVadldrb0x5VjV0QkI0SWpkT2tIOV90SkhTSU9XcEUtRjJEcTdIZC0tQ213OVhySnJzUWowR1NLeURWZlUwVUllbmxUNUEydW82T0hBWTRsbWFZQlFlMmtINER1M0I5REhQNXFsWWJFeExCMTFmcWdsN3Bja2s4a0x6bjFXTVBvb01lYVctODhtUjFKMVNDbDIteWlXNF8zSHVkUnBIanBVaHc2ak5IMmV3UXBndVdzMmdfZTN2RzUxTmxoa18wNW11X1h2bFRUQ0NZZFlndFl5VXJBY3c5cnF3MWNnVThRMWwwTDJKYlFHSWV0eElqOUxqeEhFbzZMZm5MZ1E3VEFFMkhEQ2tXbUs2M0Z2YWREQ1pTZTVyVUN0aWJHNmNNZGRfY0FaOEw4dk1ZLTFFMHMwanZkVU9MRkR2d0hEUmhjeWxDdzFkTUtSdkVVTlN6cDUtX1Ytb2RKTkV2TlhIR3JaaUNxVFdEZUtUMDF3WVNRZjJwanZUbnU0MXMtMzdOaGdRN3pTM0tEazY5all0UVBqWjZWUTQ0SUFhRTdEZ2FHUlR6cGd1bjVPTFhUX3dqOGRyX2dtSm9GZVZWdzQxNWY3TXNVd1dTZDM1ZVhIZFAwUEY4dGhqWWdxcHE5X09TeWcwbkxxUGdFSExMUmxyRi14b2djZzlMM2YyQkdIdXhvczRIRVFWRU9EMFFTZGdCMUNQaHE5NXkydzI5cjFKRkdGUmdYQjVhWS1MODBlazl1Y3k0VFJ2TjVJVVotRDJnaVVmdmlvVHMxcy1WNDR2SFpudzlXVi1SeEphWVdDM2NMNm42c3lRUlBoYjMzc2V4MlQ4eWhSRG04X0YtRFlFS3BNU3RyR2lpWm1wWE4zTjdSQVA0LUJWMTdhTVZiM0U2ODhhVldLUnNmdERpWGxnNGtSc0h2dklaYzhXT1J6X0xDT1Z0ZFViM2xfOXBqd3pYOWlMUDdXTzRtQjl2QWl4WkJZMW52dGVCSWRUdmotTlJoUjlBTU5NQ1RDV1JvY3BEbWVwYW5xZHdJaUNSMDlncktGZTZaM29hUXpmbk81Uk1fVERpTjBvN1pUbkUzU2NPdDhkSElrUHRjUW1KcUlFSGRxNjlzdkgzNk8zd2ZxeVZwTnBrbXVHV0tmVGdfeDRmNmxvOFZqMlNKSVFCLWJhYW1lUG9rMUpuSHJ2eF9FcE9RZ0VmbWZyZ1J5S2ZHM1dBX0FhZUVYbndkZVFyMEZwdTVLX2lSVHFoVkdzSG1aTHlRSERMaTUzMVVUM0szZFBwcENhWUR5dFlhQUc2YmoweENTWVJBSDEtLVR3UWpRYW9CLWMxdHo3REZzTkpkNW9XU0RZb1dja0JTbWJZTXBNN2JfUDBhSnB5VVpWTmdtUFhYYldNanBLOFhwV2xMd0xWM2U3N05iVnBnZHNUckVieFpUZjFtWEgzdFZGT3FpZDN3Z0o2a1c2ZURLblhFNDNWbmFVSVRfQzBaRVJMNTQ2NlpIaE42WXRISmh6NWtrNkdyZzlTZERDOURDZ0NTbGpwZkNaQmwwazZYeTJLS1Q0blpyaHRIdVJOaEJBREczYVZVQWRNeGF0MnZGS0Nma3hrdnNhWENEUVhLREgtTndQa2FlS0o2VjNXMVJWeDZObExHVTZ5VlZmUEZ0RW1GMVk2SE9TQlluWkdENldVZGI1RGJVTHhXNFA4S0xaNC1ldVNXWTlqNVVSa0lRTjlUU3pIRV92RVh4OTllZHZGZUtzWjlFcy1kZ1l2R2N5ZXJMa1VmRXdWOXc0QTJhYTFldUFUODhoaEZWaVI2NGpuRlloRlRsckh3cjZHU1RrbjVUbGpzYUh1UTBwQVRFTUlfR3dKLUpuSUgySjJYRjB4UkdtSWhZTi1SUDFxZWFJcWt6UDRkN2V2UWE2MEp3dnZLTTIzSkdPTjNOWHk3V2loUkp0NmNPXzM5UHdOalM4cDRnWm51dTBaMVV5UWI1OEsyWXNza000NC1IYVhYbGYxSXlTVVFTb1RCcW0wNGtOSkE3RHZENDJmTmJ5X2t2cWRHUmg2ZVlZaTRmdXBfbU1heW1DSjYySUNrc3RfTDUyS3czVkxQUzR2aGZqbUhnOFBLTXBRU1BsRkpKX04tUFpBVm1ndlpOWUpmenU5eHo5Mk42NlpoUlF2TnhGN0wxNDl6UTRENGlPdjhRcTg0X21WeTI4UERjUUx6SGpzbHY5RGFBQ1JyM2VJdkpBNXRCU0Y2NGJrNDUzTGNkZlBGdFFOM3hNallNeGRsV2pwSXFHbDVlRHAwYTNWNi1rQjlNeWxIRFdfZU9ERXh4WThaYURQMDk0eXlmOGoySG5EQ3lWdW4xRzNTX2lfOVVNUFNnb2dmdU1pUVVRNF9WTnZ2eFJCWUp6TVYtejZwR2FkeW04eXp0dGJ6cDBvdDduWm45bVZDZFNGcTBZb0RCOURGd2tFb3JYQ1BTb1hWZEZEOXlhQi0wbTZPRzRuQlVjY2NmLXhVM0c3OFJBMVhyUE5rWkc3QXZONFp6U3hFLUpiejZpMzk4dl9kaUVhd25ONHFUazNWYTlMSkhIeFR5VFk2aC1wMmduekdjckg5andjREF2Sm41Q0JGUi1JbzRKOXFwWFdPdUF3MlJFa1daTUFZV0lPUnFodlhRaVR4MUZoWnhwWDM5M1UweWZ2SWQtTEY1TDhpVmI4bXcxQlBJNGptNHVCYWxVYkx2d00yWEdtckttM3hVUlM1eFdtR3FLcHJBUHRuay1KM0EzclpDX2JaTjFSaXdrUVlPR0FWNl9jSWJoMk8yb3ZNdVREcWZhd3BKNjhSa2lwOUhMcl9sa2lYd0lmbEk5eWNQVkh2WmU0SmJ0SjB0UjFhd2l3b3ZUZWNNaktGQ3hWNEx4cWNQMUY3cE1ZMWllMlowZ0JrU3NiU1VvRmZ5RnpjNW9UeW82MjdZeS1FdGlYZHg4aHJKRExKa1lfekxTbk9aa3hOY3pESm5FWUJUTmF4a0JQWUZNajUwVGZyRkZoUkI1YjIzeTM3bmlLWGtmNzJkU2lWSnowelozd0lmWE94V3l2VlBfaHVZU0hIX3VOS3d5T0o1ODA0MnRsU3pBX2tRRjFPLUFaajdIbTdIUnpGSTRtQmV0dnJ0VWNrdUpVRTBtcEh4Rkh5WmQ5ZHgzWlZ0M2NKUmp6ZlBsZFJHV0Y2RGhEWW1kU05YaUI3akRKbHpEa1ZIU3RyNGtsTHFzZ2NFdEFHSjdGN2FudDRSZ3h3WEVJelA0cUhQSDBlTE5jRmVYSHNNR2pVVXphSDJzQUFYSnU0emtyVl9TcTdpOTUwcWpYOHdtWDEtay1xbFZqaGtQOXpTalhHTHladGt4YmNMWDRUSWNsLTFPYmEzNWFpaXNta2dpRzJPT3Y1WVZWbjNuWm9JU2owVkRIQ2k0cldnUmFFLTJKc1lMekNZY0U2OEF6Q3dYYXhqdTdrNC01MzZWb1l6VlZjMjFkdmNBQWI0Mzk3QlNrcHYza19rSl9VUV9hUTFCNDZLcUZ2MFJhYTlDQTNmbURmcnJYSVRVUkp1QVA5aDZyS3ljcXJlX1dtSXUtNTFLQ1ZSLW5OX2IwYm03XzNiUDRXYnJJTnM9)
        xcode: latest
        cocoapods: default
        flutter: stable
      triggering:
        events:
          - push
        branch_patterns:
          - pattern: 'master'
            include: true
            source: true
      scripts:
        - keychain initialize
        - |
          # set up provisioning profiles
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
          echo "Saved provisioning profile $PROFILE_PATH"
        - |
          # set up signing certificate
          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
        - xcode-project use-profiles
        - xcode-project build-ipa --project "helloworld.xcodeproj" --scheme "helloworld"
        - |
          apppath=$(find $HOME/Library/Developer/Xcode/DerivedData -name "*.app" | head -1)
          echo "app path: $apppath"
          dsympath=$(find $HOME/Library/Developer/Xcode/DerivedData -name "*.dSYM" | head -1)
          echo "dSYM path: $dsympath"
      artifacts:
        - build/ios/ipa/*.ipa
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
